/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Inject, Injectable, Optional } from '@angular/core';
import { STICKY_SYDEBAR_CONFIG } from '../sidebar.interface';
import * as i0 from "@angular/core";
import * as i1 from "../sidebar.interface";
/** @type {?} */
const defaultConfig = {
    topSpacing: 0,
    bottomSpacing: 0,
    resizeSensor: true,
    containerSelector: '',
    innerWrapperSelector: '.inner-wrapper-sticky',
    stickyClass: 'is-affixed',
    minWidth: 0,
};
export class SidebarService {
    /**
     * @param {?} config
     */
    constructor(config) {
        this.config = config ? Object.assign({}, defaultConfig, config) : defaultConfig;
    }
}
SidebarService.decorators = [
    { type: Injectable, args: [{
                providedIn: 'root',
            },] }
];
/** @nocollapse */
SidebarService.ctorParameters = () => [
    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [STICKY_SYDEBAR_CONFIG,] }] }
];
/** @nocollapse */ SidebarService.ngInjectableDef = i0.ɵɵdefineInjectable({ factory: function SidebarService_Factory() { return new SidebarService(i0.ɵɵinject(i1.STICKY_SYDEBAR_CONFIG, 8)); }, token: SidebarService, providedIn: "root" });
if (false) {
    /** @type {?} */
    SidebarService.prototype.config;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic2lkZWJhci5zZXJ2aWNlLmpzIiwic291cmNlUm9vdCI6Im5nOi8vQHNtaXAvbmd4LXN0aWNreS1zaWRlYmFyLyIsInNvdXJjZXMiOlsibGliL3NlcnZpY2VzL3NpZGViYXIuc2VydmljZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7O0FBQUEsT0FBTyxFQUFDLE1BQU0sRUFBRSxVQUFVLEVBQUUsUUFBUSxFQUFDLE1BQU0sZUFBZSxDQUFDO0FBQzNELE9BQU8sRUFBQyxxQkFBcUIsRUFBc0IsTUFBTSxzQkFBc0IsQ0FBQzs7OztNQUUxRSxhQUFhLEdBQXdCO0lBQ3pDLFVBQVUsRUFBRSxDQUFDO0lBQ2IsYUFBYSxFQUFFLENBQUM7SUFDaEIsWUFBWSxFQUFFLElBQUk7SUFDbEIsaUJBQWlCLEVBQUUsRUFBRTtJQUNyQixvQkFBb0IsRUFBRSx1QkFBdUI7SUFDN0MsV0FBVyxFQUFFLFlBQVk7SUFDekIsUUFBUSxFQUFFLENBQUM7Q0FDWjtBQUtELE1BQU0sT0FBTyxjQUFjOzs7O0lBSXpCLFlBQXVELE1BQTJCO1FBQ2hGLElBQUksQ0FBQyxNQUFNLEdBQUcsTUFBTSxDQUFDLENBQUMsbUJBQUssYUFBYSxFQUFLLE1BQU0sRUFBRSxDQUFDLENBQUMsYUFBYSxDQUFDO0lBQ3ZFLENBQUM7OztZQVRGLFVBQVUsU0FBQztnQkFDVixVQUFVLEVBQUUsTUFBTTthQUNuQjs7Ozs0Q0FLYyxRQUFRLFlBQUksTUFBTSxTQUFDLHFCQUFxQjs7Ozs7SUFGckQsZ0NBQTRCIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtJbmplY3QsIEluamVjdGFibGUsIE9wdGlvbmFsfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7U1RJQ0tZX1NZREVCQVJfQ09ORklHLCBTdGlja3lTaWRlYmFyQ29uZmlnfSBmcm9tICcuLi9zaWRlYmFyLmludGVyZmFjZSc7XG5cbmNvbnN0IGRlZmF1bHRDb25maWc6IFN0aWNreVNpZGViYXJDb25maWcgPSB7XG4gIHRvcFNwYWNpbmc6IDAsXG4gIGJvdHRvbVNwYWNpbmc6IDAsXG4gIHJlc2l6ZVNlbnNvcjogdHJ1ZSxcbiAgY29udGFpbmVyU2VsZWN0b3I6ICcnLFxuICBpbm5lcldyYXBwZXJTZWxlY3RvcjogJy5pbm5lci13cmFwcGVyLXN0aWNreScsXG4gIHN0aWNreUNsYXNzOiAnaXMtYWZmaXhlZCcsXG4gIG1pbldpZHRoOiAwLFxufTtcblxuQEluamVjdGFibGUoe1xuICBwcm92aWRlZEluOiAncm9vdCcsXG59KVxuZXhwb3J0IGNsYXNzIFNpZGViYXJTZXJ2aWNlIHtcblxuICBjb25maWc6IFN0aWNreVNpZGViYXJDb25maWc7XG5cbiAgY29uc3RydWN0b3IoQE9wdGlvbmFsKCkgQEluamVjdChTVElDS1lfU1lERUJBUl9DT05GSUcpIGNvbmZpZzogU3RpY2t5U2lkZWJhckNvbmZpZykge1xuICAgIHRoaXMuY29uZmlnID0gY29uZmlnID8gey4uLmRlZmF1bHRDb25maWcsIC4uLmNvbmZpZ30gOiBkZWZhdWx0Q29uZmlnO1xuICB9XG59XG4iXX0=