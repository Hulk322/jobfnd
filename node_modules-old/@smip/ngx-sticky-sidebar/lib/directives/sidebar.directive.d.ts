import { ElementRef, EventEmitter, OnDestroy, OnInit } from '@angular/core';
import { SidebarService } from '../services/sidebar.service';
import { Subject } from 'rxjs';
import * as ɵngcc0 from '@angular/core';
export declare class SidebarDirective implements OnInit, OnDestroy {
    private element;
    private sidebarConfig;
    topSpacing: number | string;
    bottomSpacing: number | string;
    resizeSensor: boolean;
    containerSelector: string;
    innerWrapperSelector: string;
    stickyClass: string;
    minWidth: number | string;
    updateSticky: Subject<boolean>;
    stickySidebarAffixTop: EventEmitter<{}>;
    stickySidebarAffixedTop: EventEmitter<{}>;
    stickySidebarAffixBottom: EventEmitter<{}>;
    stickySidebarAffixedBottom: EventEmitter<{}>;
    stickySidebarAffixContainerBottom: EventEmitter<{}>;
    stickySidebarAffixedContainerBottom: EventEmitter<{}>;
    stickySidebarAffixUnbottom: EventEmitter<{}>;
    stickySidebarAffixedUnbottom: EventEmitter<{}>;
    stickySidebarAffixStatic: EventEmitter<{}>;
    stickySidebarAffixedStatic: EventEmitter<{}>;
    stickySidebar: any;
    constructor(element: ElementRef, sidebarConfig: SidebarService);
    ngOnInit(): void;
    onStickySidebarAffixTop(): void;
    onStickySidebarAffixedTop(): void;
    onStickySidebarAffixBottom(): void;
    onStickySidebarAffixedBottom(): void;
    onStickySidebarAffixContainerBottom(): void;
    onStickySidebarAffixedContainerBottom(): void;
    onStickySidebarAffixUnbottom(): void;
    onStickySidebarAffixedUnbottom(): void;
    onStickySidebarAffixStatic(): void;
    onStickySidebarAffixedStatic(): void;
    ngOnDestroy(): void;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<SidebarDirective, never>;
    static ɵdir: ɵngcc0.ɵɵDirectiveDefWithMeta<SidebarDirective, "[stickySidebar]", never, { "topSpacing": "topSpacing"; "bottomSpacing": "bottomSpacing"; "resizeSensor": "resizeSensor"; "containerSelector": "containerSelector"; "innerWrapperSelector": "innerWrapperSelector"; "stickyClass": "stickyClass"; "minWidth": "minWidth"; "updateSticky": "updateSticky"; }, { "stickySidebarAffixTop": "stickySidebarAffixTop"; "stickySidebarAffixedTop": "stickySidebarAffixedTop"; "stickySidebarAffixBottom": "stickySidebarAffixBottom"; "stickySidebarAffixedBottom": "stickySidebarAffixedBottom"; "stickySidebarAffixContainerBottom": "stickySidebarAffixContainerBottom"; "stickySidebarAffixedContainerBottom": "stickySidebarAffixedContainerBottom"; "stickySidebarAffixUnbottom": "stickySidebarAffixUnbottom"; "stickySidebarAffixedUnbottom": "stickySidebarAffixedUnbottom"; "stickySidebarAffixStatic": "stickySidebarAffixStatic"; "stickySidebarAffixedStatic": "stickySidebarAffixedStatic"; }, never>;
}

//# sourceMappingURL=sidebar.directive.d.ts.map