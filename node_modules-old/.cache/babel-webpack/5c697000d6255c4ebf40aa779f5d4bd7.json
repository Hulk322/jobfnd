{"ast":null,"code":"import _classCallCheck from \"/home/ubuntu/job_board_fnd/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/ubuntu/job_board_fnd/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { LoadingBarService, LoadingBarModule } from '@ngx-loading-bar/core';\nimport { Injectable, NgModule } from '@angular/core';\nimport { finalize } from 'rxjs/operators';\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@ngx-loading-bar/core';\n\nvar LoadingBarInterceptor = /*#__PURE__*/function () {\n  /**\n   * @param {?} loadingBar\n   */\n  function LoadingBarInterceptor(loadingBar) {\n    _classCallCheck(this, LoadingBarInterceptor);\n\n    this.loadingBar = loadingBar;\n  }\n  /**\n   * @param {?} req\n   * @param {?} next\n   * @return {?}\n   */\n\n\n  _createClass(LoadingBarInterceptor, [{\n    key: \"intercept\",\n    value: function intercept(req, next) {\n      var _this = this;\n\n      // https://github.com/angular/angular/issues/18155\n      if (req.headers.has('ignoreLoadingBar')) {\n        return next.handle(req.clone({\n          headers: req.headers.delete('ignoreLoadingBar')\n        }));\n      }\n      /** @type {?} */\n\n\n      var r = next.handle(req);\n      /** @type {?} */\n\n      var started = false;\n      /** @type {?} */\n\n      var responseSubscribe = r.subscribe.bind(r);\n\n      r.subscribe = function () {\n        _this.loadingBar.start();\n\n        started = true;\n        return responseSubscribe.apply(void 0, arguments);\n      };\n\n      return r.pipe(finalize(function () {\n        return started && _this.loadingBar.complete();\n      }));\n    }\n  }]);\n\n  return LoadingBarInterceptor;\n}();\n\nLoadingBarInterceptor.ɵfac = function LoadingBarInterceptor_Factory(t) {\n  return new (t || LoadingBarInterceptor)(ɵngcc0.ɵɵinject(ɵngcc1.LoadingBarService));\n};\n\nLoadingBarInterceptor.ɵprov = ɵngcc0.ɵɵdefineInjectable({\n  token: LoadingBarInterceptor,\n  factory: LoadingBarInterceptor.ɵfac\n});\n/** @nocollapse */\n\nLoadingBarInterceptor.ctorParameters = function () {\n  return [{\n    type: LoadingBarService\n  }];\n};\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(LoadingBarInterceptor, [{\n    type: Injectable\n  }], function () {\n    return [{\n      type: ɵngcc1.LoadingBarService\n    }];\n  }, null);\n})();\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n\nvar LoadingBarHttpClientModule = /*#__PURE__*/_createClass(function LoadingBarHttpClientModule() {\n  _classCallCheck(this, LoadingBarHttpClientModule);\n});\n\nLoadingBarHttpClientModule.ɵfac = function LoadingBarHttpClientModule_Factory(t) {\n  return new (t || LoadingBarHttpClientModule)();\n};\n\nLoadingBarHttpClientModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({\n  type: LoadingBarHttpClientModule\n});\nLoadingBarHttpClientModule.ɵinj = ɵngcc0.ɵɵdefineInjector({\n  providers: [{\n    provide: HTTP_INTERCEPTORS,\n    useClass: LoadingBarInterceptor,\n    multi: true\n  }],\n  imports: [[HttpClientModule, LoadingBarModule], HttpClientModule, LoadingBarModule]\n});\n\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(LoadingBarHttpClientModule, {\n    imports: function imports() {\n      return [HttpClientModule, LoadingBarModule];\n    },\n    exports: function exports() {\n      return [HttpClientModule, LoadingBarModule];\n    }\n  });\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(LoadingBarHttpClientModule, [{\n    type: NgModule,\n    args: [{\n      imports: [HttpClientModule, LoadingBarModule],\n      exports: [HttpClientModule, LoadingBarModule],\n      providers: [{\n        provide: HTTP_INTERCEPTORS,\n        useClass: LoadingBarInterceptor,\n        multi: true\n      }]\n    }]\n  }], null, null);\n})();\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n\nexport { LoadingBarHttpClientModule, LoadingBarInterceptor as ɵa }; //# sourceMappingURL=ngx-loading-bar-http-client.js.map","map":{"version":3,"sources":["/home/ubuntu/job_board_fnd/node_modules/@ngx-loading-bar/http-client/__ivy_ngcc__/fesm2015/ngx-loading-bar-http-client.js"],"names":["HttpClientModule","HTTP_INTERCEPTORS","LoadingBarService","LoadingBarModule","Injectable","NgModule","finalize","ɵngcc0","ɵngcc1","LoadingBarInterceptor","loadingBar","req","next","headers","has","handle","clone","delete","r","started","responseSubscribe","subscribe","bind","start","pipe","complete","ɵfac","LoadingBarInterceptor_Factory","t","ɵɵinject","ɵprov","ɵɵdefineInjectable","token","factory","ctorParameters","type","ngDevMode","ɵsetClassMetadata","LoadingBarHttpClientModule","LoadingBarHttpClientModule_Factory","ɵmod","ɵɵdefineNgModule","ɵinj","ɵɵdefineInjector","providers","provide","useClass","multi","imports","ngJitMode","ɵɵsetNgModuleScope","exports","args","ɵa"],"mappings":"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","sourcesContent":["import { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { LoadingBarService, LoadingBarModule } from '@ngx-loading-bar/core';\nimport { Injectable, NgModule } from '@angular/core';\nimport { finalize } from 'rxjs/operators';\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@ngx-loading-bar/core';\nclass LoadingBarInterceptor {\n    /**\n     * @param {?} loadingBar\n     */\n    constructor(loadingBar) {\n        this.loadingBar = loadingBar;\n    }\n    /**\n     * @param {?} req\n     * @param {?} next\n     * @return {?}\n     */\n    intercept(req, next) {\n        // https://github.com/angular/angular/issues/18155\n        if (req.headers.has('ignoreLoadingBar')) {\n            return next.handle(req.clone({ headers: req.headers.delete('ignoreLoadingBar') }));\n        }\n        /** @type {?} */\n        const r = next.handle(req);\n        /** @type {?} */\n        let started = false;\n        /** @type {?} */\n        const responseSubscribe = r.subscribe.bind(r);\n        r.subscribe = (...args) => {\n            this.loadingBar.start();\n            started = true;\n            return responseSubscribe(...args);\n        };\n        return r.pipe(finalize(() => started && this.loadingBar.complete()));\n    }\n}\nLoadingBarInterceptor.ɵfac = function LoadingBarInterceptor_Factory(t) { return new (t || LoadingBarInterceptor)(ɵngcc0.ɵɵinject(ɵngcc1.LoadingBarService)); };\nLoadingBarInterceptor.ɵprov = ɵngcc0.ɵɵdefineInjectable({ token: LoadingBarInterceptor, factory: LoadingBarInterceptor.ɵfac });\n/** @nocollapse */\nLoadingBarInterceptor.ctorParameters = () => [\n    { type: LoadingBarService }\n];\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(LoadingBarInterceptor, [{\n        type: Injectable\n    }], function () { return [{ type: ɵngcc1.LoadingBarService }]; }, null); })();\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass LoadingBarHttpClientModule {\n}\nLoadingBarHttpClientModule.ɵfac = function LoadingBarHttpClientModule_Factory(t) { return new (t || LoadingBarHttpClientModule)(); };\nLoadingBarHttpClientModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: LoadingBarHttpClientModule });\nLoadingBarHttpClientModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ providers: [\n        { provide: HTTP_INTERCEPTORS, useClass: LoadingBarInterceptor, multi: true },\n    ], imports: [[\n            HttpClientModule,\n            LoadingBarModule,\n        ], HttpClientModule,\n        LoadingBarModule] });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(LoadingBarHttpClientModule, { imports: function () { return [HttpClientModule,\n        LoadingBarModule]; }, exports: function () { return [HttpClientModule,\n        LoadingBarModule]; } }); })();\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(LoadingBarHttpClientModule, [{\n        type: NgModule,\n        args: [{\n                imports: [\n                    HttpClientModule,\n                    LoadingBarModule,\n                ],\n                exports: [\n                    HttpClientModule,\n                    LoadingBarModule,\n                ],\n                providers: [\n                    { provide: HTTP_INTERCEPTORS, useClass: LoadingBarInterceptor, multi: true },\n                ]\n            }]\n    }], null, null); })();\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\nexport { LoadingBarHttpClientModule, LoadingBarInterceptor as ɵa };\n\n//# sourceMappingURL=ngx-loading-bar-http-client.js.map"]},"metadata":{},"sourceType":"module"}