{"ast":null,"code":"import _createClass from \"/home/ubuntu/job_board_fnd/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _classCallCheck from \"/home/ubuntu/job_board_fnd/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _inherits from \"/home/ubuntu/job_board_fnd/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/home/ubuntu/job_board_fnd/node_modules/@babel/runtime/helpers/esm/createSuper\";\nimport { BehaviorSubject, queueScheduler, Observable } from 'rxjs';\nimport { observeOn, scan, distinctUntilChanged, map } from 'rxjs/operators';\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n/**\n * @template T\n */\n\nvar MiniState = /*#__PURE__*/function (_BehaviorSubject) {\n  _inherits(MiniState, _BehaviorSubject);\n\n  var _super = _createSuper(MiniState);\n\n  /**\n   * @param {?} _initialState\n   * @param {?} actionsDispatcher$\n   * @param {?} reducer\n   */\n  function MiniState(_initialState, actionsDispatcher$, reducer) {\n    var _this;\n\n    _classCallCheck(this, MiniState);\n\n    _this = _super.call(this, _initialState);\n    var\n    /** @type {?} */\n    actionInQueue$ = actionsDispatcher$.pipe(observeOn(queueScheduler));\n    var\n    /** @type {?} */\n    state$ = actionInQueue$.pipe(scan(function (state, action) {\n      if (!action) {\n        return state;\n      }\n\n      return reducer(state, action);\n    }, _initialState));\n    state$.subscribe(function (value) {\n      return _this.next(value);\n    });\n    return _this;\n  }\n\n  return _createClass(MiniState);\n}(BehaviorSubject);\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n/**\n * @template T\n */\n\n\nvar MiniStore = /*#__PURE__*/function (_Observable) {\n  _inherits(MiniStore, _Observable);\n\n  var _super2 = _createSuper(MiniStore);\n\n  /**\n   * @param {?} _dispatcher\n   * @param {?} _reducer\n   * @param {?} state$\n   */\n  function MiniStore(_dispatcher, _reducer,\n  /* tslint:disable-next-line: no-any */\n\n  /* tslint:disable-next-line: no-any */\n  state$) {\n    var _this2;\n\n    _classCallCheck(this, MiniStore);\n\n    _this2 = _super2.call(this);\n    _this2._dispatcher = _dispatcher;\n    _this2._reducer = _reducer;\n    /* tslint:disable-next-line: deprecation */\n\n    _this2.source = state$;\n    return _this2;\n  }\n  /**\n   * @template R\n   * @param {?} pathOrMapFn\n   * @return {?}\n   */\n\n\n  _createClass(MiniStore, [{\n    key: \"select\",\n    value: function select(pathOrMapFn) {\n      /* tslint:disable-next-line: deprecation */\n      var\n      /** @type {?} */\n      mapped$ = this.source.pipe(map(pathOrMapFn));\n      return mapped$.pipe(distinctUntilChanged());\n    }\n    /**\n     * @template R\n     * @param {?} operator\n     * @return {?}\n     */\n\n  }, {\n    key: \"lift\",\n    value: function lift(operator) {\n      var\n      /** @type {?} */\n      store = new MiniStore(this._dispatcher, this._reducer, this);\n      /* tslint:disable-next-line: deprecation */\n\n      store.operator = operator;\n      return store;\n    }\n    /**\n     * @param {?} action\n     * @return {?}\n     */\n\n  }, {\n    key: \"dispatch\",\n    value: function dispatch(action) {\n      this._dispatcher.next(action);\n    }\n    /**\n     * @param {?} action\n     * @return {?}\n     */\n\n  }, {\n    key: \"next\",\n    value: function next(action) {\n      this._dispatcher.next(action);\n    }\n    /**\n     * @param {?} err\n     * @return {?}\n     */\n\n  }, {\n    key: \"error\",\n    value: function error(err) {\n      this._dispatcher.error(err);\n    }\n    /**\n     * @return {?}\n     */\n\n  }, {\n    key: \"complete\",\n    value: function complete() {\n      /*noop*/\n    }\n  }]);\n\n  return MiniStore;\n}(Observable);\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n\nexport { MiniState, MiniStore }; //# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibmd4LWJvb3RzdHJhcC1taW5pLW5ncnguanMiLCJzb3VyY2VzIjpbIm5neC1ib290c3RyYXAvbWluaS1uZ3J4L3N0YXRlLmNsYXNzLnRzIiwibmd4LWJvb3RzdHJhcC9taW5pLW5ncngvc3RvcmUuY2xhc3MudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUlBLEFBQUE7QUFBSTtBQUFlO0FBSW5CLGVBQTBCLFNBQVEsZUFBa0IsdkNBQXBELGVBQTBCLFNBQVEsZUFBa0I7QUFDcEQ7QUFBUTtBQUVMO0FBQXFDO0FBQ2xCO0lBSHBCLFlBQ0UsYUFBZ0IsRUFDaEIsa0JBQXNDLEVBQ3RDLE9BQXlCLDFEQUM3QixJQUpFLFlBQ0UsYUFBZ0IsRUFDaEIsa0JBQXNDLEVBQ3RDLE9BQXlCO1FBRXpCLEtBQUssQ0FBQyxhQUFhLENBQUMsQ0FBQyw3QkFEdEIsUUFDQyxLQUFLLENBQUMsYUFBYSxDQUFDLENBQUM7UUFFckIsdUJBQU0sY0FBYyxHQUFHLGtCQUFrQixDQUFDLElBQUksQ0FDNUMsU0FBUyxDQUFDLGNBQWMsQ0FBQyxDQUMxQixDQUFDLG5HQUhOLFFBQ0ksdUJBQU0sY0FBYyxHQUFHLGtCQUFrQixDQUFDLElBQUksQ0FDNUMsU0FBUyxDQUFDLGNBQWMsQ0FBQyxDQUMxQixDQUFDO1FBQ0YsdUJBQU0sTUFBTSxHQUFHLGNBQWMsQ0FBQyxJQUFJLENBQ2hDLElBQUksQ0FBQyxDQUFDLEtBQVEsRUFBRSxNQUFjLC9FQURwQyxRQUFJLHVCQUFNLE1BQU0sR0FBRyxjQUFjLENBQUMsSUFBSSxDQUNoQyxJQUFJLENBQUMsQ0FBQyxLQUFRLEVBQUUsTUFBYztZQUM1QixJQUFJLENBQUMsTUFBTSxFQUFFLHpCQUFyQixZQUFRLElBQUksQ0FBQyxNQUFNLEVBQUU7Z0JBQ1gsT0FBTyxLQUFLLENBQUMsN0JBQXZCLGdCQUFVLE9BQU8sS0FBSyxDQUFDO2FBQ2QsYkFBVCxhQUFTO1lBRUQsT0FBTyxPQUFPLENBQUMsS0FBSyxFQUFFLE1BQU0sQ0FBQyxDQUFD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Q0FBQyxJQUFJLENBQUMsTUFBTSxDQUFDLENBQUMsdENBQWxDLFFBQUksSUFBSSxDQUFDLFdBQVcsQ0FBQyxJQUFJLENBQUMsTUFBTSxDQUFDLENBQUM7S0FDL0IsTEFBSCxLQUFHO0FBQ0g7QUFDTztBQUFzQjtBQUN0QjtJQUFMLEtBQUssQ0FBQyxHQUFRLGJBQUQsSUFBYixLQUFLLENBQUMsR0FBUTtRQUNaLElBQUksQ0FBQyxXQUFXLENBQUMsS0FBSyxDQUFDLEdBQUcsQ0FBQyxDQUFDLHBDQUFoQyxRQUFJLElBQUksQ0FBQyxXQUFXLENBQUMsS0FBSyxDQUFDLEdBQUcsQ0FBQyxDQUFDO0tBQzdCLExBQUgsS0FBRztBQUNIO0FBQ087QUFDSTtJQURULFFBQVEsWkFJVixJQUpFLFFBQVE7QUFDVjtLQUNHLExBQ0gsS0FERztDQUNGLERBQUQsQ0FBQztBQUNEO0FBQUM7QUFBSTtBQUFrQztBQUF5QztBQUFJO0FBQUM7QUFBSTtBQUFrQztBQUF5QztBQUFJO0FBQUMiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIEBjb3B5cmlnaHQgbmdyeFxuICovXG5pbXBvcnQgeyBBY3Rpb24sIEFjdGlvblJlZHVjZXIgfSBmcm9tICcuL2luZGV4JztcbmltcG9ydCB7IEJlaGF2aW9yU3ViamVjdCwgT2JzZXJ2YWJsZSwgcXVldWVTY2hlZHVsZXIgfSBmcm9tICdyeGpzJztcbmltcG9ydCB7IG9ic2VydmVPbiwgc2NhbiB9IGZyb20gJ3J4anMvb3BlcmF0b3JzJztcblxuXG5leHBvcnQgY2xhc3MgTWluaVN0YXRlPFQ+IGV4dGVuZHMgQmVoYXZpb3JTdWJqZWN0PFQ+IHtcbiAgY29uc3RydWN0b3IoXG4gICAgX2luaXRpYWxTdGF0ZTogVCxcbiAgICBhY3Rpb25zRGlzcGF0Y2hlciQ6IE9ic2VydmFibGU8QWN0aW9uPixcbiAgICByZWR1Y2VyOiBBY3Rpb25SZWR1Y2VyPFQ+XG4gICkge1xuICAgIHN1cGVyKF9pbml0aWFsU3RhdGUpO1xuXG4gICAgY29uc3QgYWN0aW9uSW5RdWV1ZSQgPSBhY3Rpb25zRGlzcGF0Y2hlciQucGlwZShcbiAgICAgIG9ic2VydmVPbihxdWV1ZVNjaGVkdWxlcilcbiAgICApO1xuICAgIGNvbnN0IHN0YXRlJCA9IGFjdGlvbkluUXVldWUkLnBpcGUoXG4gICAgICBzY2FuKChzdGF0ZTogVCwgYWN0aW9uOiBBY3Rpb24pID0+IHtcbiAgICAgICAgaWYgKCFhY3Rpb24pIHtcbiAgICAgICAgICByZXR1cm4gc3RhdGU7XG4gICAgICAgIH1cblxuICAgICAgICByZXR1cm4gcmVkdWNlcihzdGF0ZSwgYWN0aW9uKTtcbiAgICAgIH0sXG4gICAgICBfaW5pdGlhbFN0YXRlXG4gICAgKSk7XG5cbiAgICBzdGF0ZSQuc3Vic2NyaWJlKCh2YWx1ZTogVCkgPT4gdGhpcy5uZXh0KHZhbHVlKSk7XG4gIH1cbn1cbiIsIi8qKlxuICogQGNvcHlyaWdodCBuZ3J4XG4gKi9cbmltcG9ydCB7IE9ic2VydmFibGUsIE9ic2VydmVyLCBPcGVyYXRvciB9IGZyb20gJ3J4anMnO1xuaW1wb3J0IHsgZGlzdGluY3RVbnRpbENoYW5nZWQsIG1hcCB9IGZyb20gJ3J4anMvb3BlcmF0b3JzJztcbmltcG9ydCB7IEFjdGlvbiwgQWN0aW9uUmVkdWNlciB9IGZyb20gJy4vaW5kZXgnO1xuXG5leHBvcnQgY2xhc3MgTWluaVN0b3JlPFQ+IGV4dGVuZHMgT2JzZXJ2YWJsZTxUPiBpbXBsZW1lbnRzIE9ic2VydmVyPEFjdGlvbj4ge1xuICBjb25zdHJ1Y3RvcihcbiAgICBwcml2YXRlIF9kaXNwYXRjaGVyOiBPYnNlcnZlcjxBY3Rpb24+LFxuICAgIC8qIHRzbGludDpkaXNhYmxlLW5leHQtbGluZTogbm8tYW55ICovXG4gICAgcHJpdmF0ZSBfcmVkdWNlcjogQWN0aW9uUmVkdWNlcjxhbnk+LFxuICAgIC8qIHRzbGludDpkaXNhYmxlLW5leHQtbGluZTogbm8tYW55ICovXG4gICAgc3RhdGUkOiBPYnNlcnZhYmxlPGFueT5cbiAgKSB7XG4gICAgc3VwZXIoKTtcblxuICAgIC8qIHRzbGludDpkaXNhYmxlLW5leHQtbGluZTogZGVwcmVjYXRpb24gKi9cbiAgICB0aGlzLnNvdXJjZSA9IHN0YXRlJDtcbiAgfVxuXG4gIHNlbGVjdDxSPihwYXRoT3JNYXBGbjogKHN0YXRlOiBUKSA9PiBSKTogT2JzZXJ2YWJsZTxSPiB7XG4gICAgLyogdHNsaW50OmRpc2FibGUtbmV4dC1saW5lOiBkZXByZWNhdGlvbiAqL1xuICAgIGNvbnN0IG1hcHBlZCQ6IE9ic2VydmFibGU8Uj4gPSB0aGlzLnNvdXJjZS5waXBlKG1hcChwYXRoT3JNYXBGbikpO1xuXG4gICAgcmV0dXJuIG1hcHBlZCQucGlwZShkaXN0aW5jdFVudGlsQ2hhbmdlZCgpKTtcbiAgfVxuXG4gIGxpZnQ8Uj4ob3BlcmF0b3I6IE9wZXJhdG9yPFQsIFI+KTogTWluaVN0b3JlPFI+IHtcbiAgICBjb25zdCBzdG9yZSA9IG5ldyBNaW5pU3RvcmU8Uj4odGhpcy5fZGlzcGF0Y2hlciwgdGhpcy5fcmVkdWNlciwgdGhpcyk7XG4gICAgLyogdHNsaW50OmRpc2FibGUtbmV4dC1saW5lOiBkZXByZWNhdGlvbiAqL1xuICAgIHN0b3JlLm9wZXJhdG9yID0gb3BlcmF0b3I7XG5cbiAgICByZXR1cm4gc3RvcmU7XG4gIH1cblxuICBkaXNwYXRjaChhY3Rpb246IEFjdGlvbikge1xuICAgIHRoaXMuX2Rpc3BhdGNoZXIubmV4dChhY3Rpb24pO1xuICB9XG5cbiAgbmV4dChhY3Rpb246IEFjdGlvbikge1xuICAgIHRoaXMuX2Rpc3BhdGNoZXIubmV4dChhY3Rpb24pO1xuICB9XG5cbiAgLyogdHNsaW50OmRpc2FibGUtbmV4dC1saW5lOiBuby1hbnkgKi9cbiAgZXJyb3IoZXJyOiBhbnkpIHtcbiAgICB0aGlzLl9kaXNwYXRjaGVyLmVycm9yKGVycik7XG4gIH1cblxuICBjb21wbGV0ZSgpIHtcbiAgICAvKm5vb3AqL1xuICB9XG59XG4iXX0=","map":{"version":3,"sources":["/home/ubuntu/job_board_fnd/node_modules/ngx-bootstrap/__ivy_ngcc__/mini-ngrx/fesm2015/ngx-bootstrap-mini-ngrx.js"],"names":["BehaviorSubject","queueScheduler","Observable","observeOn","scan","distinctUntilChanged","map","MiniState","_initialState","actionsDispatcher$","reducer","actionInQueue$","pipe","state$","state","action","subscribe","value","next","MiniStore","_dispatcher","_reducer","source","pathOrMapFn","mapped$","operator","store","err","error"],"mappings":";;;;AAAA,SAASA,eAAT,EAA0BC,cAA1B,EAA0CC,UAA1C,QAA4D,MAA5D;AACA,SAASC,SAAT,EAAoBC,IAApB,EAA0BC,oBAA1B,EAAgDC,GAAhD,QAA2D,gBAA3D;AAEA;AACA;AACA;AACA;;AACA;AACA;AACA;;IACMC,S;;;;;AACF;AACJ;AACA;AACA;AACA;AACI,qBAAYC,aAAZ,EAA2BC,kBAA3B,EAA+CC,OAA/C,EAAwD;AAAA;;AAAA;;AACpD,8BAAMF,aAAN;AACA;AAAM;AAAiBG,IAAAA,cAAc,GAAGF,kBAAkB,CAACG,IAAnB,CAAwBT,SAAS,CAACF,cAAD,CAAjC,CAAxC;AACA;AAAM;AAAiBY,IAAAA,MAAM,GAAGF,cAAc,CAACC,IAAf,CAAoBR,IAAI,CAAC,UAACU,KAAD,EAAQC,MAAR,EAAmB;AACxE,UAAI,CAACA,MAAL,EAAa;AACT,eAAOD,KAAP;AACH;;AACD,aAAOJ,OAAO,CAACI,KAAD,EAAQC,MAAR,CAAd;AACH,KALuD,EAKrDP,aALqD,CAAxB,CAAhC;AAMAK,IAAAA,MAAM,CAACG,SAAP,CAAiB,UAACC,KAAD;AAAA,aAAW,MAAKC,IAAL,CAAUD,KAAV,CAAX;AAAA,KAAjB;AAToD;AAUvD;;;EAhBmBjB,e;AAmBxB;AACA;AACA;AACA;;AACA;AACA;AACA;;;IACMmB,S;;;;;AACF;AACJ;AACA;AACA;AACA;AACI,qBAAYC,WAAZ,EAAyBC,QAAzB;AAAmC;;AACnC;AACAR,EAAAA,MAFA,EAEQ;AAAA;;AAAA;;AACJ;AACA,WAAKO,WAAL,GAAmBA,WAAnB;AACA,WAAKC,QAAL,GAAgBA,QAAhB;AACA;;AACA,WAAKC,MAAL,GAAcT,MAAd;AALI;AAMP;AACD;AACJ;AACA;AACA;AACA;;;;;WACI,gBAAOU,WAAP,EAAoB;AAChB;AACA;AAAM;AAAiBC,MAAAA,OAAO,GAAG,KAAKF,MAAL,CAAYV,IAAZ,CAAiBN,GAAG,CAACiB,WAAD,CAApB,CAAjC;AACA,aAAOC,OAAO,CAACZ,IAAR,CAAaP,oBAAoB,EAAjC,CAAP;AACH;AACD;AACJ;AACA;AACA;AACA;;;;WACI,cAAKoB,QAAL,EAAe;AACX;AAAM;AAAiBC,MAAAA,KAAK,GAAG,IAAIP,SAAJ,CAAc,KAAKC,WAAnB,EAAgC,KAAKC,QAArC,EAA+C,IAA/C,CAA/B;AACA;;AACAK,MAAAA,KAAK,CAACD,QAAN,GAAiBA,QAAjB;AACA,aAAOC,KAAP;AACH;AACD;AACJ;AACA;AACA;;;;WACI,kBAASX,MAAT,EAAiB;AACb,WAAKK,WAAL,CAAiBF,IAAjB,CAAsBH,MAAtB;AACH;AACD;AACJ;AACA;AACA;;;;WACI,cAAKA,MAAL,EAAa;AACT,WAAKK,WAAL,CAAiBF,IAAjB,CAAsBH,MAAtB;AACH;AACD;AACJ;AACA;AACA;;;;WACI,eAAMY,GAAN,EAAW;AACP,WAAKP,WAAL,CAAiBQ,KAAjB,CAAuBD,GAAvB;AACH;AACD;AACJ;AACA;;;;WACI,oBAAW;AACP;AACH;;;;EA9DmBzB,U;AAiExB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;;AAEA,SAASK,SAAT,EAAoBY,SAApB,G,CAEA","sourcesContent":["import { BehaviorSubject, queueScheduler, Observable } from 'rxjs';\nimport { observeOn, scan, distinctUntilChanged, map } from 'rxjs/operators';\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @template T\n */\nclass MiniState extends BehaviorSubject {\n    /**\n     * @param {?} _initialState\n     * @param {?} actionsDispatcher$\n     * @param {?} reducer\n     */\n    constructor(_initialState, actionsDispatcher$, reducer) {\n        super(_initialState);\n        const /** @type {?} */ actionInQueue$ = actionsDispatcher$.pipe(observeOn(queueScheduler));\n        const /** @type {?} */ state$ = actionInQueue$.pipe(scan((state, action) => {\n            if (!action) {\n                return state;\n            }\n            return reducer(state, action);\n        }, _initialState));\n        state$.subscribe((value) => this.next(value));\n    }\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @template T\n */\nclass MiniStore extends Observable {\n    /**\n     * @param {?} _dispatcher\n     * @param {?} _reducer\n     * @param {?} state$\n     */\n    constructor(_dispatcher, _reducer, /* tslint:disable-next-line: no-any */\n    /* tslint:disable-next-line: no-any */\n    state$) {\n        super();\n        this._dispatcher = _dispatcher;\n        this._reducer = _reducer;\n        /* tslint:disable-next-line: deprecation */\n        this.source = state$;\n    }\n    /**\n     * @template R\n     * @param {?} pathOrMapFn\n     * @return {?}\n     */\n    select(pathOrMapFn) {\n        /* tslint:disable-next-line: deprecation */\n        const /** @type {?} */ mapped$ = this.source.pipe(map(pathOrMapFn));\n        return mapped$.pipe(distinctUntilChanged());\n    }\n    /**\n     * @template R\n     * @param {?} operator\n     * @return {?}\n     */\n    lift(operator) {\n        const /** @type {?} */ store = new MiniStore(this._dispatcher, this._reducer, this);\n        /* tslint:disable-next-line: deprecation */\n        store.operator = operator;\n        return store;\n    }\n    /**\n     * @param {?} action\n     * @return {?}\n     */\n    dispatch(action) {\n        this._dispatcher.next(action);\n    }\n    /**\n     * @param {?} action\n     * @return {?}\n     */\n    next(action) {\n        this._dispatcher.next(action);\n    }\n    /**\n     * @param {?} err\n     * @return {?}\n     */\n    error(err) {\n        this._dispatcher.error(err);\n    }\n    /**\n     * @return {?}\n     */\n    complete() {\n        /*noop*/\n    }\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\nexport { MiniState, MiniStore };\n\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibmd4LWJvb3RzdHJhcC1taW5pLW5ncnguanMiLCJzb3VyY2VzIjpbIm5neC1ib290c3RyYXAvbWluaS1uZ3J4L3N0YXRlLmNsYXNzLnRzIiwibmd4LWJvb3RzdHJhcC9taW5pLW5ncngvc3RvcmUuY2xhc3MudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUlBLEFBQUE7QUFBSTtBQUFlO0FBSW5CLGVBQTBCLFNBQVEsZUFBa0IsdkNBQXBELGVBQTBCLFNBQVEsZUFBa0I7QUFDcEQ7QUFBUTtBQUVMO0FBQXFDO0FBQ2xCO0lBSHBCLFlBQ0UsYUFBZ0IsRUFDaEIsa0JBQXNDLEVBQ3RDLE9BQXlCLDFEQUM3QixJQUpFLFlBQ0UsYUFBZ0IsRUFDaEIsa0JBQXNDLEVBQ3RDLE9BQXlCO1FBRXpCLEtBQUssQ0FBQyxhQUFhLENBQUMsQ0FBQyw3QkFEdEIsUUFDQyxLQUFLLENBQUMsYUFBYSxDQUFDLENBQUM7UUFFckIsdUJBQU0sY0FBYyxHQUFHLGtCQUFrQixDQUFDLElBQUksQ0FDNUMsU0FBUyxDQUFDLGNBQWMsQ0FBQyxDQUMxQixDQUFDLG5HQUhOLFFBQ0ksdUJBQU0sY0FBYyxHQUFHLGtCQUFrQixDQUFDLElBQUksQ0FDNUMsU0FBUyxDQUFDLGNBQWMsQ0FBQyxDQUMxQixDQUFDO1FBQ0YsdUJBQU0sTUFBTSxHQUFHLGNBQWMsQ0FBQyxJQUFJLENBQ2hDLElBQUksQ0FBQyxDQUFDLEtBQVEsRUFBRSxNQUFjLC9FQURwQyxRQUFJLHVCQUFNLE1BQU0sR0FBRyxjQUFjLENBQUMsSUFBSSxDQUNoQyxJQUFJLENBQUMsQ0FBQyxLQUFRLEVBQUUsTUFBYztZQUM1QixJQUFJLENBQUMsTUFBTSxFQUFFLHpCQUFyQixZQUFRLElBQUksQ0FBQyxNQUFNLEVBQUU7Z0JBQ1gsT0FBTyxLQUFLLENBQUMsN0JBQXZCLGdCQUFVLE9BQU8sS0FBSyxDQUFDO2FBQ2QsYkFBVCxhQUFTO1lBRUQsT0FBTyxPQUFPLENBQUMsS0FBSyxFQUFFLE1BQU0sQ0FBQyxDQUFD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Q0FBQyxJQUFJLENBQUMsTUFBTSxDQUFDLENBQUMsdENBQWxDLFFBQUksSUFBSSxDQUFDLFdBQVcsQ0FBQyxJQUFJLENBQUMsTUFBTSxDQUFDLENBQUM7S0FDL0IsTEFBSCxLQUFHO0FBQ0g7QUFDTztBQUFzQjtBQUN0QjtJQUFMLEtBQUssQ0FBQyxHQUFRLGJBQUQsSUFBYixLQUFLLENBQUMsR0FBUTtRQUNaLElBQUksQ0FBQyxXQUFXLENBQUMsS0FBSyxDQUFDLEdBQUcsQ0FBQyxDQUFDLHBDQUFoQyxRQUFJLElBQUksQ0FBQyxXQUFXLENBQUMsS0FBSyxDQUFDLEdBQUcsQ0FBQyxDQUFDO0tBQzdCLExBQUgsS0FBRztBQUNIO0FBQ087QUFDSTtJQURULFFBQVEsWkFJVixJQUpFLFFBQVE7QUFDVjtLQUNHLExBQ0gsS0FERztDQUNGLERBQUQsQ0FBQztBQUNEO0FBQUM7QUFBSTtBQUFrQztBQUF5QztBQUFJO0FBQUM7QUFBSTtBQUFrQztBQUF5QztBQUFJO0FBQUMiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIEBjb3B5cmlnaHQgbmdyeFxuICovXG5pbXBvcnQgeyBBY3Rpb24sIEFjdGlvblJlZHVjZXIgfSBmcm9tICcuL2luZGV4JztcbmltcG9ydCB7IEJlaGF2aW9yU3ViamVjdCwgT2JzZXJ2YWJsZSwgcXVldWVTY2hlZHVsZXIgfSBmcm9tICdyeGpzJztcbmltcG9ydCB7IG9ic2VydmVPbiwgc2NhbiB9IGZyb20gJ3J4anMvb3BlcmF0b3JzJztcblxuXG5leHBvcnQgY2xhc3MgTWluaVN0YXRlPFQ+IGV4dGVuZHMgQmVoYXZpb3JTdWJqZWN0PFQ+IHtcbiAgY29uc3RydWN0b3IoXG4gICAgX2luaXRpYWxTdGF0ZTogVCxcbiAgICBhY3Rpb25zRGlzcGF0Y2hlciQ6IE9ic2VydmFibGU8QWN0aW9uPixcbiAgICByZWR1Y2VyOiBBY3Rpb25SZWR1Y2VyPFQ+XG4gICkge1xuICAgIHN1cGVyKF9pbml0aWFsU3RhdGUpO1xuXG4gICAgY29uc3QgYWN0aW9uSW5RdWV1ZSQgPSBhY3Rpb25zRGlzcGF0Y2hlciQucGlwZShcbiAgICAgIG9ic2VydmVPbihxdWV1ZVNjaGVkdWxlcilcbiAgICApO1xuICAgIGNvbnN0IHN0YXRlJCA9IGFjdGlvbkluUXVldWUkLnBpcGUoXG4gICAgICBzY2FuKChzdGF0ZTogVCwgYWN0aW9uOiBBY3Rpb24pID0+IHtcbiAgICAgICAgaWYgKCFhY3Rpb24pIHtcbiAgICAgICAgICByZXR1cm4gc3RhdGU7XG4gICAgICAgIH1cblxuICAgICAgICByZXR1cm4gcmVkdWNlcihzdGF0ZSwgYWN0aW9uKTtcbiAgICAgIH0sXG4gICAgICBfaW5pdGlhbFN0YXRlXG4gICAgKSk7XG5cbiAgICBzdGF0ZSQuc3Vic2NyaWJlKCh2YWx1ZTogVCkgPT4gdGhpcy5uZXh0KHZhbHVlKSk7XG4gIH1cbn1cbiIsIi8qKlxuICogQGNvcHlyaWdodCBuZ3J4XG4gKi9cbmltcG9ydCB7IE9ic2VydmFibGUsIE9ic2VydmVyLCBPcGVyYXRvciB9IGZyb20gJ3J4anMnO1xuaW1wb3J0IHsgZGlzdGluY3RVbnRpbENoYW5nZWQsIG1hcCB9IGZyb20gJ3J4anMvb3BlcmF0b3JzJztcbmltcG9ydCB7IEFjdGlvbiwgQWN0aW9uUmVkdWNlciB9IGZyb20gJy4vaW5kZXgnO1xuXG5leHBvcnQgY2xhc3MgTWluaVN0b3JlPFQ+IGV4dGVuZHMgT2JzZXJ2YWJsZTxUPiBpbXBsZW1lbnRzIE9ic2VydmVyPEFjdGlvbj4ge1xuICBjb25zdHJ1Y3RvcihcbiAgICBwcml2YXRlIF9kaXNwYXRjaGVyOiBPYnNlcnZlcjxBY3Rpb24+LFxuICAgIC8qIHRzbGludDpkaXNhYmxlLW5leHQtbGluZTogbm8tYW55ICovXG4gICAgcHJpdmF0ZSBfcmVkdWNlcjogQWN0aW9uUmVkdWNlcjxhbnk+LFxuICAgIC8qIHRzbGludDpkaXNhYmxlLW5leHQtbGluZTogbm8tYW55ICovXG4gICAgc3RhdGUkOiBPYnNlcnZhYmxlPGFueT5cbiAgKSB7XG4gICAgc3VwZXIoKTtcblxuICAgIC8qIHRzbGludDpkaXNhYmxlLW5leHQtbGluZTogZGVwcmVjYXRpb24gKi9cbiAgICB0aGlzLnNvdXJjZSA9IHN0YXRlJDtcbiAgfVxuXG4gIHNlbGVjdDxSPihwYXRoT3JNYXBGbjogKHN0YXRlOiBUKSA9PiBSKTogT2JzZXJ2YWJsZTxSPiB7XG4gICAgLyogdHNsaW50OmRpc2FibGUtbmV4dC1saW5lOiBkZXByZWNhdGlvbiAqL1xuICAgIGNvbnN0IG1hcHBlZCQ6IE9ic2VydmFibGU8Uj4gPSB0aGlzLnNvdXJjZS5waXBlKG1hcChwYXRoT3JNYXBGbikpO1xuXG4gICAgcmV0dXJuIG1hcHBlZCQucGlwZShkaXN0aW5jdFVudGlsQ2hhbmdlZCgpKTtcbiAgfVxuXG4gIGxpZnQ8Uj4ob3BlcmF0b3I6IE9wZXJhdG9yPFQsIFI+KTogTWluaVN0b3JlPFI+IHtcbiAgICBjb25zdCBzdG9yZSA9IG5ldyBNaW5pU3RvcmU8Uj4odGhpcy5fZGlzcGF0Y2hlciwgdGhpcy5fcmVkdWNlciwgdGhpcyk7XG4gICAgLyogdHNsaW50OmRpc2FibGUtbmV4dC1saW5lOiBkZXByZWNhdGlvbiAqL1xuICAgIHN0b3JlLm9wZXJhdG9yID0gb3BlcmF0b3I7XG5cbiAgICByZXR1cm4gc3RvcmU7XG4gIH1cblxuICBkaXNwYXRjaChhY3Rpb246IEFjdGlvbikge1xuICAgIHRoaXMuX2Rpc3BhdGNoZXIubmV4dChhY3Rpb24pO1xuICB9XG5cbiAgbmV4dChhY3Rpb246IEFjdGlvbikge1xuICAgIHRoaXMuX2Rpc3BhdGNoZXIubmV4dChhY3Rpb24pO1xuICB9XG5cbiAgLyogdHNsaW50OmRpc2FibGUtbmV4dC1saW5lOiBuby1hbnkgKi9cbiAgZXJyb3IoZXJyOiBhbnkpIHtcbiAgICB0aGlzLl9kaXNwYXRjaGVyLmVycm9yKGVycik7XG4gIH1cblxuICBjb21wbGV0ZSgpIHtcbiAgICAvKm5vb3AqL1xuICB9XG59XG4iXX0="]},"metadata":{},"sourceType":"module"}