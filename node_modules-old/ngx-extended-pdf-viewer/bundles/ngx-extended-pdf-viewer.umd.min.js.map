{"version":3,"sources":["ng://ngx-extended-pdf-viewer/lib/default-options.ts","ng://ngx-extended-pdf-viewer/lib/ngx-extended-pdf-viewer.component.ts","ng://ngx-extended-pdf-viewer/lib/ResponsiveCSSSimulation.ts","ng://ngx-extended-pdf-viewer/lib/ngx-extended-pdf-viewer.service.ts","ng://ngx-extended-pdf-viewer/lib/ngx-extended-pdf-viewer.module.ts"],"names":["defaultOptions","cursorToolOnLoad","defaultUrl","defaultZoomValue","disableHistory","disablePageLabels","enablePrintAutoRotate","enableWebGL","eventBusDispatchToDOM","externalLinkRel","externalLinkTarget","historyUpdateUrl","imageResourcesPath","maxCanvasPixels","pdfBugEnabled","renderer","renderInteractiveForms","sidebarViewOnLoad","scrollModeOnLoad","spreadModeOnLoad","textLayerMode","useOnlyCssZoom","viewOnLoad","cMapPacked","cMapUrl","disableAutoFetch","disableCreateObjectURL","disableFontFace","disableRange","disableStream","isEvalSupported","maxImageSize","pdfBug","postMessageTransfers","verbosity","workerPort","workerSrc","NgxExtendedPdfViewerComponent","Object","defineProperty","prototype","url","Uint8Array","this","_src","buffer","Blob","URL","createObjectURL","length","test","console","warn","base64","binary_string","window","atob","len","bytes","i","charCodeAt","src","_height","h","_this","minHeight","undefined","height","setTimeout","checkHeight","_showSidebarButton","show","factor","navigator","userAgent","Number","_mobileFriendlyZoom","replace","findbarLeft","toString","zoom","isIE","showSidebarButton","toolbarWidth","findbarTop","secondaryToolbarRight","mobileFriendlyZoom","_top","endsWith","substring","calcViewerPositionTop","viewerPositionTop","isPrimaryMenuVisible","emitZoomChange","selectedIndex","sizeSelector","nativeElement","s","options","value","label","zoomChange","emit","emitZoomChangeAfterDelay","ngOnInit","ignoreResponsiveCSS","pdfViewer","document","getElementsByClassName","toolbar_1","width","clientWidth","innerWidth","langLinks","querySelectorAll","querySelector","useBrowserLocale","error","o","attributes","callback","e","removeEventListener","initTimeout","openPDF","delayFirstView","addEventListener","ngxExtendedPdfViewerInitialized","overrideDefaultSettings","primaryMenuVisible","isSecondaryMenuVisible","showSecondaryToolbarButton","webViewerLoad","PDFViewerApplication","appConfig","filenameForDownload","PDFViewerApplicationOptions","set","language","isViewerEmbedded","printKeyDownListener","pc","getElementById","getElementsByTagName","appendChild","container","clientHeight","includes","mh","innerHeight","getBoundingClientRect","top","onPageChange","inputField","page","isNaN","pageChange","onSpreadChange","newSpread","spreadChange","key","setZoom","showHandToolButton","showSidebarOnLoad","spread","spreadMode","onResize","listenToURL","pdfLinkService","setHash","selectCursorTool","eventBus","on","x","pagesLoaded","nameddest","navigateTo","pageRendered","password","open","dispatch","tool","handTool","ngOnDestroy","clearTimeout","app","cleanup","close","_boundEvents","unbindWindowEvents","bus","unbindEvents","_listeners","body","topLevelElements","children","item","id","removeChild","showPagingButtons","showPropertiesButton","showRotateButton","showScrollingButton","showSpreadButton","showBookmarkButton","showDownloadButton","showFindButton","showOpenFileButton","showPresentationModeButton","showPrintButton","showZoomButtons","ngOnChanges","changes","zoomAsNumber","String","currentScaleValue","resizeTimeout","doResize","resizeUpTo900px","elt","classList","add","remove","resizeUpTo840px","resizeUpTo770px","hiddenLargeElements","visibleLargeElements","resizeUpTo700px","mediumElements","visibleMediumElements","resizeUpTo640px","smallElements","visibleSmallViewElements","toolbarButtonSpacer","findbar","resizeUpTo535px","tiny","Component","args","selector","template","encapsulation","ViewEncapsulation","None","changeDetection","ChangeDetectionStrategy","OnPush","Input","Output","ViewChild","backgroundColor","EventEmitter","NgxExtendedPdfViewerService","find","text","setAttribute","dispatchEvent","Event","findNext","button","click","findPrevious","Injectable","providedIn","NgxExtendedPdfViewerModule","NgModule","imports","CommonModule","declarations","providers","exports"],"mappings":"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","sourcesContent":["export const defaultOptions = {\n  cursorToolOnLoad: 0,\n  defaultUrl: '',\n  defaultZoomValue: '',\n  disableHistory: false,\n  disablePageLabels: false,\n  enablePrintAutoRotate: false,\n  enableWebGL: false,\n  eventBusDispatchToDOM: false,\n  externalLinkRel: 'noopener noreferrer nofollow',\n  externalLinkTarget: 0,\n  historyUpdateUrl: false,\n  imageResourcesPath: './images/',\n  maxCanvasPixels: 16777216,\n  pdfBugEnabled: false,\n  renderer: 'canvas',\n  renderInteractiveForms: false,\n  sidebarViewOnLoad: -1,\n  scrollModeOnLoad: -1,\n  spreadModeOnLoad: -1,\n  textLayerMode: 1,\n  useOnlyCssZoom: false,\n  viewOnLoad: 0,\n  cMapPacked: true,\n  cMapUrl: '../web/cmaps/',\n  disableAutoFetch: false,\n  disableCreateObjectURL: false,\n  disableFontFace: false,\n  disableRange: false,\n  disableStream: false,\n  isEvalSupported: true,\n  maxImageSize: -1,\n  pdfBug: false,\n  postMessageTransfers: true,\n  verbosity: 1,\n  workerPort: null,\n  workerSrc: '../build/pdf.worker.js'\n};\n","import {\n  Component,\n  OnInit,\n  ViewEncapsulation,\n  Input,\n  OnChanges,\n  SimpleChanges,\n  OnDestroy,\n  Output,\n  EventEmitter,\n  ViewChild,\n  ChangeDetectionStrategy\n} from '@angular/core';\nimport { PagesLoadedEvent } from './pages-loaded-event';\nimport { PageRenderedEvent } from './page-rendered-event';\nimport { defaultOptions } from './default-options';\nimport {\n  resizeUpTo900px,\n  resizeUpTo840px,\n  resizeUpTo770px,\n  resizeUpTo700px,\n  resizeUpTo640px,\n  resizeUpTo535px\n} from './ResponsiveCSSSimulation';\n\n@Component({\n  selector: 'ngx-extended-pdf-viewer',\n  templateUrl: './ngx-extended-pdf-viewer.component.html',\n  styleUrls: ['./viewer-with-images-2.2.css', './ngx-extended-pdf-viewer.component.css'],\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class NgxExtendedPdfViewerComponent implements OnInit, OnChanges, OnDestroy {\n  public static ngxExtendedPdfViewerInitialized = false;\n\n  private _src: string | ArrayBuffer;\n\n  private resizeTimeout: any = null;\n\n  /**\n   * Number of milliseconds to wait between initializing the PDF viewer and loading the PDF file.\n   * Most users can let this parameter safely at it's default value of zero.\n   * Set this to 1000 or higher if you run into timing problems (typically caused by loading the locale files\n   * after the PDF files, so they are not available when the PDF viewer is initialized).\n   */\n  @Input()\n  public delayFirstView = 0;\n\n  @Input()\n  public ignoreResponsiveCSS: boolean | undefined = undefined;\n\n  /** store the timeout id so it can be canceled if user leaves the page before the PDF is shown */\n  private initTimeout: any;\n\n  public primaryMenuVisible = true;\n\n  @Input()\n  public set src(url: string | ArrayBuffer | Uint8Array) {\n    if (url instanceof Uint8Array) {\n      this._src = (<Uint8Array>url).buffer;\n    } else if (url instanceof Blob) {\n      this._src = URL.createObjectURL(url);\n    } else if (typeof url === 'string') {\n      this._src = url;\n      if (url.length > 980) {\n        // minimal length of a base64 encoded PDF\n        if (url.length % 4 === 0) {\n          if (/^[a-zA-Z\\d\\/+]+={0,2}$/.test(url)) {\n            console.warn('The URL looks like a base64 encoded string. If so, please use the attribute base64 instead of src');\n          }\n        }\n      }\n    } else {\n      this._src = url;\n    }\n  }\n\n  @Input()\n  public set base64Src(base64: string) {\n    const binary_string = window.atob(base64);\n    const len = binary_string.length;\n    const bytes = new Uint8Array(len);\n    for (let i = 0; i < len; i++) {\n      bytes[i] = binary_string.charCodeAt(i);\n    }\n    this.src = bytes.buffer;\n  }\n\n  public minHeight: string | undefined = undefined;\n\n  private _height = '100%';\n\n  @Input()\n  public set height(h: string) {\n    this.minHeight = undefined;\n    if (h) {\n      this._height = h;\n    } else {\n      this.height = '100%';\n    }\n    setTimeout(() => {\n      this.checkHeight();\n    });\n  }\n\n  public get height() {\n    return this._height;\n  }\n\n  /**\n   * If this flag is true, this components adds a link to the locale assets. The pdf viewer\n   * sees this link and uses it to load the locale files automatically.\n   * @param useBrowserLocale boolean\n   */\n  @Input()\n  public useBrowserLocale = false;\n\n  @Input()\n  public backgroundColor = '#e8e8eb';\n\n  /** Allows the user to define the name of the file after clicking \"download\" */\n  @Input()\n  public filenameForDownload = 'document.pdf';\n\n  /** Override the default locale. This must be the complete locale name, such as \"es-ES\". The string is allowed to be all lowercase.\n   */\n  @Input()\n  public language: string | undefined = undefined;\n\n  /** By default, listening to the URL is deactivated because often the anchor tag is used for the Angular router */\n  @Input()\n  public listenToURL = false;\n\n  /** Navigate to a certain \"named destination\" */\n  @Input()\n  public nameddest: string | undefined = undefined;\n\n  /** allows you to pass a password to read password-protected files */\n  @Input()\n  public password: string | undefined = undefined;\n\n  public _showSidebarButton = true;\n\n  public viewerPositionTop = '32px';\n\n  public get showSidebarButton() {\n    return this._showSidebarButton;\n  }\n  @Input()\n  public set showSidebarButton(show: boolean) {\n    this._showSidebarButton = show;\n    const isIE = /msie\\s|trident\\//i.test(window.navigator.userAgent);\n    let factor = 1;\n    if (isIE) {\n      factor = Number((this._mobileFriendlyZoom || '100').replace('%', '')) / 100;\n    }\n\n    if (this._showSidebarButton) {\n      this.findbarLeft = (68 * factor).toString() + 'px';\n    } else {\n      this.findbarLeft = '0px';\n    }\n  }\n\n  /** If [showSideBarButton]=\"true\", do you want the sidebar to be shown by default ([showSidebarOnLoad])=\"true\")\n   * or not? By default, this flag is undefined, telling the PDF viewer to use the last setting used with this particular\n   * document, or to hide the sidebar if the document is opened for the first time.\n   */\n  @Input()\n  public showSidebarOnLoad: boolean | undefined = undefined;\n\n  @Input()\n  public showFindButton = true;\n  @Input()\n  public showPagingButtons = true;\n  @Input()\n  public showZoomButtons = true;\n  @Input()\n  public showPresentationModeButton = false;\n  @Input()\n  public showOpenFileButton = true;\n  @Input()\n  public showPrintButton = true;\n  @Input()\n  public showDownloadButton = true;\n  @Input()\n  public showBookmarkButton = true;\n  @Input()\n  public showSecondaryToolbarButton = true;\n  @Input()\n  public showRotateButton = true;\n  @Input()\n  public handTool = true;\n  @Input()\n  public showHandToolButton = false;\n  @Input()\n  public showScrollingButton = true;\n  @Input()\n  public showSpreadButton = true;\n  @Input()\n  public showPropertiesButton = true;\n\n  @Input()\n  public spread: 'off' | 'even' | 'odd';\n\n  @Output()\n  public spreadChange = new EventEmitter<'off' | 'even' | 'odd'>();\n\n  @Input()\n  public page: number | undefined = undefined;\n\n  @Output()\n  public pageChange = new EventEmitter<number | undefined>();\n\n  @Output()\n  public pagesLoaded = new EventEmitter<PagesLoadedEvent>();\n\n  @Output()\n  public pageRendered = new EventEmitter<PageRenderedEvent>();\n\n  /** Legal values: undefined, 'auto', 'page-actual', 'page_fit', 'page-width', or '50' (or any other percentage) */\n  @Input()\n  public zoom: string | number | undefined = undefined;\n\n  @Output()\n  public zoomChange = new EventEmitter<string | number | undefined>();\n\n  /** This attributes allows you to increase the size of the UI elements so you can use them on small mobile devices.\n   * This attribute is a string with a percent character at the end (e.g. \"150%\").\n   */\n  @Input() _mobileFriendlyZoom = '100%';\n\n  public toolbarWidth = '100%';\n\n  // dirty IE11 hack - temporary solution\n  public findbarTop: string | undefined = undefined;\n\n  // dirty IE11 hack - temporary solution\n  public findbarLeft: string | undefined = undefined;\n\n  // dirty IE11 hack - temporary solution\n  public secondaryToolbarRight: string | undefined = undefined;\n\n  public get mobileFriendlyZoom() {\n    return this._mobileFriendlyZoom;\n  }\n  /*\n   * This attributes allows you to increase the size of the UI elements so you can use them on small mobile devices.\n   * This attribute is a string with a percent character at the end (e.g. \"150%\").*/\n  @Input()\n  public set mobileFriendlyZoom(zoom: string) {\n    // tslint:disable-next-line:triple-equals - the type conversion is intended\n    if (zoom == 'true') {\n      zoom = '150%';\n      // tslint:disable-next-line:triple-equals - the type conversion is intended\n    } else if (zoom == 'false') {\n      zoom = '100%';\n    }\n    this._mobileFriendlyZoom = zoom;\n    const isIE = /msie\\s|trident\\//i.test(window.navigator.userAgent);\n    let factor = 1;\n    if (isIE) {\n      factor = Number((zoom || '100').replace('%', '')) / 100;\n    }\n    if (this.showSidebarButton) {\n      this.findbarLeft = (68 * factor).toString() + 'px';\n    } else {\n      this.findbarLeft = '0px';\n    }\n    if (isIE) {\n      // dirty, temporary hack\n      this.toolbarWidth = (100 / factor).toString() + '%';\n      this.findbarTop = (32 * factor).toString() + 'px';\n      this.secondaryToolbarRight = (252 * (factor - 1)).toString() + 'px';\n    }\n  }\n\n  /** Deprecated. Please use [mobileFriendlyZoom] instead.\n   * This attributes allows you to increase the size of the UI elements so you can use them on small mobile devices.\n   * This attribute is a string with a percent character at the end (e.g. \"150%\").*/\n  @Input()\n  public set mobileZoom(mobileFriendlyZoom: string) {\n    this.mobileFriendlyZoom = mobileFriendlyZoom;\n  }\n\n  @ViewChild('sizeSelector') sizeSelector: any;\n\n  private _top: string | undefined = undefined;\n\n  public get sidebarPositionTop(): string {\n    if (this._top) {\n      return this._top;\n    }\n    if (this.mobileFriendlyZoom) {\n      if (this.mobileFriendlyZoom.endsWith('%')) {\n        const zoom = Number(this.mobileFriendlyZoom.substring(0, this.mobileFriendlyZoom.length - 1));\n        return (0.32 * zoom).toString() + 'px';\n      }\n      if (this.mobileFriendlyZoom.endsWith('px')) {\n        return this.mobileFriendlyZoom;\n      }\n    }\n    return '32px';\n  }\n  public calcViewerPositionTop(): void {\n    if (this._top) {\n      this.viewerPositionTop = this._top;\n      return;\n    }\n    if (this.mobileFriendlyZoom) {\n      if (this.mobileFriendlyZoom.endsWith('%')) {\n        const zoom = Number(this.mobileFriendlyZoom.substring(0, this.mobileFriendlyZoom.length - 1));\n        if (!this.isPrimaryMenuVisible()) {\n          this.viewerPositionTop = '0';\n        } else {\n          this.viewerPositionTop = (1 + 0.32 * zoom).toString() + 'px';\n        }\n        return;\n      }\n      if (this.mobileFriendlyZoom.endsWith('px')) {\n        this.viewerPositionTop = this.mobileFriendlyZoom;\n        return;\n      }\n    }\n    if (this.isPrimaryMenuVisible()) {\n      this.viewerPositionTop = '32px';\n    } else {\n      this.viewerPositionTop = '0';\n    }\n  }\n\n  constructor() {}\n\n  public emitZoomChange(): void {\n    const selectedIndex = this.sizeSelector.nativeElement.selectedIndex;\n    if (selectedIndex) {\n      const s = this.sizeSelector.nativeElement.options[selectedIndex] as HTMLOptionElement;\n      let value: number | string = s.label;\n\n      if (value.endsWith('%')) {\n        value = Number(value.replace('%', ''));\n      } else {\n        value = s.value;\n      }\n      this.zoomChange.emit(value);\n    }\n  }\n\n  public emitZoomChangeAfterDelay(): void {\n    setTimeout(() => {\n      this.emitZoomChange();\n    }, 10);\n  }\n\n  ngOnInit() {\n    if (this.ignoreResponsiveCSS === undefined) {\n      const pdfViewer = document.getElementsByClassName('html');\n      if (pdfViewer && pdfViewer.length > 0) {\n        const toolbar = pdfViewer[0].getElementsByClassName('toolbar');\n        if (toolbar && toolbar.length > 0) {\n          const width = toolbar[0].clientWidth;\n          if (window.innerWidth - width > 50) {\n            this.ignoreResponsiveCSS = true;\n          } else {\n            this.ignoreResponsiveCSS = false;\n          }\n        }\n      }\n    }\n    const langLinks = document.querySelectorAll('link[type=\"application/l10n\"]');\n    const langCount = langLinks.length;\n\n    if (langCount === 0) {\n      const dict = document.querySelector('script[type=\"application/l10n\"]');\n      if (!dict) {\n        if (!this.useBrowserLocale) {\n          console.error(\n            \"If you set the attribute 'useBrowserLocale' to false, you must provide the translations yourself in a script or link tag.\"\n          );\n          console.error('The easiest way to do this is to add them to the index.html.');\n        }\n      } else if (this.useBrowserLocale) {\n        console.error(\n          \"Please set the attribute 'useBrowserLocale' to false if you provide the translations yourself in a script or link tag.\"\n        );\n      }\n    } else if (this.useBrowserLocale) {\n      const o = langLinks[0].attributes['origin'];\n      if (o && o.value !== 'ngx-extended-pdf-viewer') {\n        console.error(\n          \"Please set the attribute 'useBrowserLocale' to false if you provide the translations yourself in a script or link tag.\"\n        );\n      }\n    }\n    const callback = e => {\n      document.removeEventListener('localized', callback);\n      this.initTimeout = setTimeout(() => {\n        this.openPDF();\n      }, this.delayFirstView);\n    };\n\n    document.addEventListener('localized', callback);\n\n    if (NgxExtendedPdfViewerComponent.ngxExtendedPdfViewerInitialized) {\n      console.error(\"You're trying to open two instances of the PDF viewer. Most likely, this will result in errors.\");\n    }\n    document.addEventListener('webviewerloaded', () => {\n      this.overrideDefaultSettings();\n    });\n\n    setTimeout(() => {\n      // This initializes the webviewer, the file may be passed in to it to initialize the viewer with a pdf directly\n      this.primaryMenuVisible = true;\n      if (!this.isSecondaryMenuVisible()) {\n        this.showSecondaryToolbarButton = false;\n      }\n      if (!this.showSecondaryToolbarButton) {\n        if (!this.isPrimaryMenuVisible()) {\n          this.primaryMenuVisible = false;\n        }\n      }\n      this.calcViewerPositionTop();\n      (<any>window).webViewerLoad();\n      (<any>window).PDFViewerApplication.appConfig.defaultUrl = ''; // IE bugfix\n      (<any>window).PDFViewerApplication.appConfig.filenameForDownload = this.filenameForDownload;\n      (<any>window).PDFViewerApplicationOptions.set('locale', this.language);\n\n      (<any>window).PDFViewerApplication.isViewerEmbedded = true;\n      window.addEventListener('keydown', (<any>window).PDFViewerApplication.printKeyDownListener, true);\n\n      const pc = document.getElementById('printContainer');\n      if (pc) {\n        document.getElementsByTagName('body')[0].appendChild(pc);\n      }\n    }, 0);\n  }\n\n  public checkHeight(): void {\n    const container = document.getElementsByClassName('zoom')[0];\n    if (container.clientHeight === 0 && this._height.includes('%')) {\n      const available = window.innerHeight;\n      const rect = container.getBoundingClientRect();\n      const top = rect.top;\n      let mh = available - top;\n      const factor = Number(this._height.replace('%', ''));\n      mh = (mh * factor) / 100;\n      if (mh > 100) {\n        this.minHeight = mh + 'px';\n      } else {\n        this.minHeight = '100px';\n      }\n    }\n  }\n\n  public onPageChange(): void {\n    setTimeout(() => {\n      const inputField = document.getElementById('pageNumber') as HTMLInputElement;\n      let page: number | undefined = Number(inputField.value);\n      if (isNaN(page)) {\n        page = undefined;\n      }\n      this.pageChange.emit(page);\n    });\n  }\n\n  public onSpreadChange(newSpread: 'off' | 'even' | 'odd'): void {\n    this.spreadChange.emit(newSpread);\n  }\n\n  private overrideDefaultSettings() {\n    const options = (<any>window).PDFViewerApplicationOptions;\n    // tslint:disable-next-line:forin\n    for (const key in defaultOptions) {\n      options.set(key, defaultOptions[key]);\n    }\n    options.set('disablePreferences', true);\n    this.setZoom();\n\n    options.set('textLayerMode', this.showHandToolButton ? 1 : 0);\n\n    if (this.showSidebarButton) {\n      if (this.showSidebarOnLoad !== undefined) {\n        (<any>window).PDFViewerApplication.sidebarViewOnLoad = this.showSidebarOnLoad ? 1 : 0;\n        if ((<any>window).PDFViewerApplication.appConfig) {\n          (<any>window).PDFViewerApplication.appConfig.sidebarViewOnLoad = this.showSidebarOnLoad ? 1 : 0;\n        }\n        options.set('sidebarViewOnLoad', this.showSidebarOnLoad ? 1 : 0);\n      }\n    } else {\n      (<any>window).PDFViewerApplication.sidebarViewOnLoad = 0;\n      options.set('sidebarViewOnLoad', 0);\n      if ((<any>window).PDFViewerApplication.appConfig) {\n        (<any>window).PDFViewerApplication.appConfig.sidebarViewOnLoad = 0;\n      }\n    }\n\n    if (this.spread === 'even') {\n      options.set('spreadModeOnLoad', 2);\n      if ((<any>window).PDFViewerApplication.pdfViewer) {\n        (<any>window).PDFViewerApplication.pdfViewer.spreadMode = 2;\n      }\n      this.onSpreadChange('even');\n    } else if (this.spread === 'odd') {\n      options.set('spreadModeOnLoad', 1);\n      if ((<any>window).PDFViewerApplication.pdfViewer) {\n        (<any>window).PDFViewerApplication.pdfViewer.spreadMode = 1;\n      }\n      this.onSpreadChange('odd');\n    } else {\n      options.set('spreadModeOnLoad', 0);\n      if ((<any>window).PDFViewerApplication.pdfViewer) {\n        (<any>window).PDFViewerApplication.pdfViewer.spreadMode = 0;\n      }\n      this.onSpreadChange('off');\n    }\n  }\n\n  private openPDF() {\n    NgxExtendedPdfViewerComponent.ngxExtendedPdfViewerInitialized = true;\n    this.onResize();\n    if (!this.listenToURL) {\n      (<any>window).PDFViewerApplication.pdfLinkService.setHash = function() {};\n    }\n    this.initTimeout = null;\n    this.selectCursorTool();\n    (<any>window).PDFViewerApplication.eventBus.on('pagesloaded', (x: PagesLoadedEvent) => {\n      this.pagesLoaded.emit(x);\n      if (this.nameddest) {\n        (<any>window).PDFViewerApplication.pdfLinkService.navigateTo(this.nameddest);\n      }\n      this.setZoom();\n    });\n    (<any>window).PDFViewerApplication.eventBus.on('pagerendered', (x: PageRenderedEvent) => {\n      this.pageRendered.emit(x);\n    });\n    this.checkHeight();\n    // open a file in the viewer\n    if (!!this._src) {\n      const options = {\n        password: this.password\n      };\n      (<any>window).PDFViewerApplication.open(this._src, options);\n    }\n    setTimeout(() => {\n      if (this.page) {\n        (<any>window).PDFViewerApplication.page = this.page;\n      }\n    }, 100);\n  }\n\n  private selectCursorTool() {\n    (<any>window).PDFViewerApplication.eventBus.dispatch('switchcursortool', { tool: this.handTool ? 1 : 0 });\n  }\n\n  public ngOnDestroy(): void {\n    NgxExtendedPdfViewerComponent.ngxExtendedPdfViewerInitialized = false;\n    if (this.initTimeout) {\n      clearTimeout(this.initTimeout);\n      this.initTimeout = undefined;\n    }\n    const app = (<any>window).PDFViewerApplication;\n    if (app) {\n      app.cleanup();\n      app.close();\n      if ((<any>window).PDFViewerApplication.printKeyDownListener) {\n        (<any>window).removeEventListener('keydown', (<any>window).PDFViewerApplication.printKeyDownListener, true);\n      }\n      if (app._boundEvents) {\n        app.unbindWindowEvents();\n      }\n      const bus = app.eventBus as any;\n      if (bus) {\n        app.unbindEvents();\n        for (const key in bus._listeners) {\n          if (bus._listeners[key]) {\n            bus._listeners[key] = undefined;\n          }\n        }\n      }\n      app.eventBus = null;\n    }\n\n    const body = document.getElementsByTagName('body');\n    if (body[0]) {\n      const topLevelElements = body[0].children;\n      for (let i = topLevelElements.length - 1; i >= 0; i--) {\n        const e = topLevelElements.item(i);\n        if (e && e.id === 'printContainer') {\n          body[0].removeChild(e);\n        } else if (e && e.id === 'fileInput') {\n          body[0].removeChild(e);\n        }\n      }\n    }\n  }\n\n  private isSecondaryMenuVisible(): boolean {\n    const visible =\n      this.showHandToolButton ||\n      this.showPagingButtons ||\n      this.showPropertiesButton ||\n      this.showRotateButton ||\n      this.showScrollingButton ||\n      this.showRotateButton ||\n      this.showSpreadButton;\n    if (visible) {\n      return true;\n    }\n    return false;\n  }\n\n  private isPrimaryMenuVisible(): boolean {\n    const visible =\n      this.showBookmarkButton ||\n      this.showDownloadButton ||\n      this.showFindButton ||\n      this.showOpenFileButton ||\n      this.showPagingButtons ||\n      this.showPresentationModeButton ||\n      this.showPrintButton ||\n      this.showPropertiesButton ||\n      this.showSidebarButton ||\n      this.showSecondaryToolbarButton ||\n      this.showZoomButtons;\n\n    if (visible) {\n      return true;\n    }\n    return false;\n  }\n\n  public ngOnChanges(changes: SimpleChanges) {\n    if (NgxExtendedPdfViewerComponent.ngxExtendedPdfViewerInitialized) {\n      if ('src' in changes) {\n        if (!!this._src) {\n          this.overrideDefaultSettings();\n          (<any>window).PDFViewerApplication.open(this._src);\n        }\n      }\n      if ('zoom' in changes) {\n        this.setZoom();\n      }\n\n      if ('handTool' in changes) {\n        this.selectCursorTool();\n      }\n      if ('page' in changes) {\n        if (this.page) {\n          (<any>window).PDFViewerApplication.page = this.page;\n        }\n      }\n      if ('filenameForDownload' in changes) {\n        (<any>window).PDFViewerApplication.appConfig.filenameForDownload = this.filenameForDownload;\n      }\n      if ('nameddest' in changes) {\n        if (this.nameddest) {\n          (<any>window).PDFViewerApplication.pdfLinkService.navigateTo(this.nameddest);\n        }\n      }\n\n      if ('spread' in changes) {\n        if (this.spread === 'even') {\n          (<any>window).PDFViewerApplication.spreadModeOnLoad = 2;\n          (<any>window).PDFViewerApplication.pdfViewer.spreadMode = 2;\n          this.onSpreadChange('even');\n        } else if (this.spread === 'odd') {\n          (<any>window).PDFViewerApplication.spreadModeOnLoad = 1;\n          (<any>window).PDFViewerApplication.pdfViewer.spreadMode = 1;\n          this.onSpreadChange('odd');\n        } else {\n          (<any>window).PDFViewerApplication.spreadModeOnLoad = 0;\n          (<any>window).PDFViewerApplication.pdfViewer.spreadMode = 0;\n          this.onSpreadChange('off');\n        }\n      }\n\n      this.primaryMenuVisible = true;\n      if (!this.isSecondaryMenuVisible()) {\n        this.showSecondaryToolbarButton = false;\n      }\n      if (!this.showSecondaryToolbarButton) {\n        if (!this.isPrimaryMenuVisible()) {\n          this.primaryMenuVisible = false;\n        }\n      }\n      this.calcViewerPositionTop();\n    }\n    this.onResize();\n  }\n\n  private setZoom() {\n    let zoomAsNumber = this.zoom;\n    if (String(zoomAsNumber).endsWith('%')) {\n      zoomAsNumber = Number(String(zoomAsNumber).replace('%', '')) / 100;\n    } else if (!isNaN(Number(zoomAsNumber))) {\n      zoomAsNumber = Number(zoomAsNumber) / 100;\n    }\n    if (!zoomAsNumber) {\n      zoomAsNumber = 'auto';\n    }\n    if ((<any>window).PDFViewerApplication) {\n      (<any>window).PDFViewerApplicationOptions.set('defaultZoomValue', zoomAsNumber);\n    }\n    if ((<any>window).PDFViewerApplication.pdfViewer) {\n      (<any>window).PDFViewerApplication.pdfViewer.currentScaleValue = zoomAsNumber;\n    }\n  }\n\n  public onResize(): void {\n    if (this.ignoreResponsiveCSS) {\n      clearTimeout(this.resizeTimeout);\n      this.resizeTimeout = setTimeout(this.doResize, 100);\n    }\n  }\n\n  private doResize(): void {\n    const pdfViewer = document.getElementsByClassName('html');\n    if (pdfViewer && pdfViewer.length > 0) {\n      const container = document.getElementById('outerContainer');\n      if (container) {\n        const width = container.clientWidth;\n        resizeUpTo900px(width);\n        resizeUpTo840px(width);\n        resizeUpTo770px(container, width);\n        resizeUpTo700px(container, width);\n        resizeUpTo640px(container, width);\n        resizeUpTo535px(width);\n      }\n    }\n  }\n}\n","function rtl(): boolean {\n  let element = document.getElementsByClassName('toolbar')[0] as HTMLElement;\n  while (element) {\n    if (element.dir !== '') {\n      return element.dir === 'rtl';\n    }\n    if (!element.parentElement) {\n      break;\n    }\n    element = element.parentElement;\n  }\n  return false;\n}\n\nexport function resizeUpTo535px(width: number) {\n  const tinyElement = document.getElementById('scaleSelectContainer');\n  const tiny = tinyElement as HTMLElement;\n  if (width < 535) {\n    // not perfect, but good first approximation\n    tiny.classList.add('hidden');\n  } else {\n    tiny.classList.remove('hidden');\n  }\n}\n\nexport function resizeUpTo640px(container: HTMLElement, width: number) {\n  const smallElements = container.getElementsByClassName('hiddenSmallView');\n  for (let i = 0; i < smallElements.length; i++) {\n    const elt = smallElements[i] as HTMLElement;\n    if (width < 640) {\n      elt.classList.add('hidden');\n    } else {\n      elt.classList.remove('hidden');\n    }\n  }\n  const visibleSmallViewElements = container.getElementsByClassName('visibleSmallView');\n  for (let i = 0; i < visibleSmallViewElements.length; i++) {\n    const elt = visibleSmallViewElements[i] as HTMLElement;\n    if (width < 640) {\n      elt.classList.remove('hidden');\n    } else {\n      elt.classList.add('hidden');\n    }\n  }\n  const toolbarButtonSpacer = container.getElementsByClassName('toolbarButtonSpacer');\n  for (let i = 0; i < toolbarButtonSpacer.length; i++) {\n    const elt = toolbarButtonSpacer[i] as HTMLElement;\n    if (width < 640) {\n      elt.classList.add('below640px');\n    } else {\n      elt.classList.remove('below640px');\n    }\n  }\n  const findbar = document.getElementsByClassName('findbar');\n  for (let i = 0; i < findbar.length; i++) {\n    const elt = findbar[i] as HTMLElement;\n    if (width < 640) {\n      elt.classList.add('below640px');\n    } else {\n      elt.classList.remove('below640px');\n    }\n  }\n}\n\nexport function resizeUpTo700px(container: HTMLElement, width: number) {\n  const mediumElements = container.getElementsByClassName('hiddenMediumView');\n  for (let i = 0; i < mediumElements.length; i++) {\n    const elt = mediumElements[i] as HTMLElement;\n    if (width < 700) {\n      elt.classList.add('hidden');\n    } else {\n      elt.classList.remove('hidden');\n    }\n  }\n  // #103\n  const visibleMediumElements = container.getElementsByClassName('visibleMediumView');\n  for (let i = 0; i < visibleMediumElements.length; i++) {\n    const elt = visibleMediumElements[i] as HTMLElement;\n    if (width < 700) {\n      elt.classList.remove('hidden');\n    } else {\n      elt.classList.add('hidden');\n    }\n  }\n}\n\nexport function resizeUpTo900px(width: number): void {\n  const elt = document.getElementById('toolbarViewerMiddle');\n  if (elt) {\n    if (width < 900) {\n      elt.classList.add('toolbarViewerMiddleBelow900px');\n    } else {\n      elt.classList.remove('toolbarViewerMiddleBelow900px');\n    }\n  }\n}\n\nexport function resizeUpTo840px(width: number) {\n  const elt = document.getElementsByClassName('zoom')[0];\n  if (elt) {\n    if (width < 840) {\n      elt.classList.add('below840px');\n    } else {\n      elt.classList.remove('below840px');\n    }\n  }\n}\n\nexport function resizeUpTo770px(container: HTMLElement, width: number) {\n  let elt = document.getElementsByClassName('zoom')[0];\n  if (elt) {\n    if (width < 770) {\n      elt.classList.add('below770px');\n    } else {\n      elt.classList.remove('below770px');\n    }\n  }\n  const hiddenLargeElements = container.getElementsByClassName('hiddenLargeView');\n  for (let i = 0; i < hiddenLargeElements.length; i++) {\n    elt = hiddenLargeElements[i] as HTMLElement;\n    if (width < 770) {\n      elt.classList.add('hidden');\n    } else {\n      elt.classList.remove('hidden');\n    }\n  }\n\n  const visibleLargeElements = container.getElementsByClassName('visibleLargeView');\n  for (let i = 0; i < visibleLargeElements.length; i++) {\n    elt = visibleLargeElements[i] as HTMLElement;\n    if (width < 770) {\n      elt.classList.remove('hidden');\n    } else {\n      elt.classList.add('hidden');\n    }\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { NgxExtendedPdfViewerComponent } from './ngx-extended-pdf-viewer.component';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class NgxExtendedPdfViewerService {\n  constructor() {}\n\n  public find(text: string): boolean {\n    if (!NgxExtendedPdfViewerComponent.ngxExtendedPdfViewerInitialized) {\n      // tslint:disable-next-line:quotemark\n      console.error(\"The PDF viewer hasn't finished initializing. Please call find() later.\");\n      return false;\n    } else {\n      const inputField = document.getElementById('findInput');\n      if (inputField) {\n        inputField.setAttribute('value', text);\n        inputField.dispatchEvent(new Event('input'));\n        return true;\n      } else {\n        // tslint:disable-next-line:quotemark\n        console.error(\"Unexpected error: the input field used to search isn't part of the DOM.\");\n        return false;\n      }\n    }\n  }\n\n  public findNext(): boolean {\n    if (!NgxExtendedPdfViewerComponent.ngxExtendedPdfViewerInitialized) {\n      // tslint:disable-next-line:quotemark\n      console.error(\"The PDF viewer hasn't finished initializing. Please call findNext() later.\");\n      return false;\n    } else {\n      const button = document.getElementById('findNext');\n      if (button) {\n        button.click();\n        return true;\n      }\n      return false;\n    }\n  }\n\n  public findPrevious(): boolean {\n    if (!NgxExtendedPdfViewerComponent.ngxExtendedPdfViewerInitialized) {\n      // tslint:disable-next-line:quotemark\n      console.error(\"The PDF viewer hasn't finished initializing. Please call findPrevious() later.\");\n      return false;\n    } else {\n      const button = document.getElementById('findPrevious');\n      if (button) {\n        button.click();\n        return true;\n      }\n      return false;\n    }\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { NgxExtendedPdfViewerComponent } from './ngx-extended-pdf-viewer.component';\nimport { NgxExtendedPdfViewerService } from './ngx-extended-pdf-viewer.service';\n\n@NgModule({\n  imports: [CommonModule],\n  declarations: [NgxExtendedPdfViewerComponent],\n  providers: [NgxExtendedPdfViewerService],\n  exports: [NgxExtendedPdfViewerComponent]\n})\nexport class NgxExtendedPdfViewerModule {}\n"]}