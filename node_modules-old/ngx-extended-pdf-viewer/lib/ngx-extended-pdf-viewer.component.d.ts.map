{"version":3,"file":"ngx-extended-pdf-viewer.component.d.ts","sources":["ngx-extended-pdf-viewer.component.d.ts"],"names":[],"mappingssourcesContent":["import { OnInit, OnChanges, SimpleChanges, OnDestroy, EventEmitter } from '@angular/core';\nimport { PagesLoadedEvent } from './pages-loaded-event';\nimport { PageRenderedEvent } from './page-rendered-event';\nexport declare class NgxExtendedPdfViewerComponent implements OnInit, OnChanges, OnDestroy {\n    static ngxExtendedPdfViewerInitialized: boolean;\n    private _src;\n    private resizeTimeout;\n    /**\n     * Number of milliseconds to wait between initializing the PDF viewer and loading the PDF file.\n     * Most users can let this parameter safely at it's default value of zero.\n     * Set this to 1000 or higher if you run into timing problems (typically caused by loading the locale files\n     * after the PDF files, so they are not available when the PDF viewer is initialized).\n     */\n    delayFirstView: number;\n    ignoreResponsiveCSS: boolean | undefined;\n    /** store the timeout id so it can be canceled if user leaves the page before the PDF is shown */\n    private initTimeout;\n    primaryMenuVisible: boolean;\n    src: string | ArrayBuffer | Uint8Array;\n    base64Src: string;\n    minHeight: string | undefined;\n    private _height;\n    height: string;\n    /**\n     * If this flag is true, this components adds a link to the locale assets. The pdf viewer\n     * sees this link and uses it to load the locale files automatically.\n     * @param useBrowserLocale boolean\n     */\n    useBrowserLocale: boolean;\n    backgroundColor: string;\n    /** Allows the user to define the name of the file after clicking \"download\" */\n    filenameForDownload: string;\n    /** Override the default locale. This must be the complete locale name, such as \"es-ES\". The string is allowed to be all lowercase.\n     */\n    language: string | undefined;\n    /** By default, listening to the URL is deactivated because often the anchor tag is used for the Angular router */\n    listenToURL: boolean;\n    /** Navigate to a certain \"named destination\" */\n    nameddest: string | undefined;\n    /** allows you to pass a password to read password-protected files */\n    password: string | undefined;\n    _showSidebarButton: boolean;\n    viewerPositionTop: string;\n    showSidebarButton: boolean;\n    /** If [showSideBarButton]=\"true\", do you want the sidebar to be shown by default ([showSidebarOnLoad])=\"true\")\n     * or not? By default, this flag is undefined, telling the PDF viewer to use the last setting used with this particular\n     * document, or to hide the sidebar if the document is opened for the first time.\n     */\n    showSidebarOnLoad: boolean | undefined;\n    showFindButton: boolean;\n    showPagingButtons: boolean;\n    showZoomButtons: boolean;\n    showPresentationModeButton: boolean;\n    showOpenFileButton: boolean;\n    showPrintButton: boolean;\n    showDownloadButton: boolean;\n    showBookmarkButton: boolean;\n    showSecondaryToolbarButton: boolean;\n    showRotateButton: boolean;\n    handTool: boolean;\n    showHandToolButton: boolean;\n    showScrollingButton: boolean;\n    showSpreadButton: boolean;\n    showPropertiesButton: boolean;\n    spread: 'off' | 'even' | 'odd';\n    spreadChange: EventEmitter<\"off\" | \"even\" | \"odd\">;\n    page: number | undefined;\n    pageChange: EventEmitter<number>;\n    pagesLoaded: EventEmitter<PagesLoadedEvent>;\n    pageRendered: EventEmitter<PageRenderedEvent>;\n    /** Legal values: undefined, 'auto', 'page-actual', 'page_fit', 'page-width', or '50' (or any other percentage) */\n    zoom: string | number | undefined;\n    zoomChange: EventEmitter<string | number>;\n    /** This attributes allows you to increase the size of the UI elements so you can use them on small mobile devices.\n     * This attribute is a string with a percent character at the end (e.g. \"150%\").\n     */\n    _mobileFriendlyZoom: string;\n    toolbarWidth: string;\n    findbarTop: string | undefined;\n    findbarLeft: string | undefined;\n    secondaryToolbarRight: string | undefined;\n    /*\n    * This attributes allows you to increase the size of the UI elements so you can use them on small mobile devices.\n    * This attribute is a string with a percent character at the end (e.g. \"150%\").*/\n    mobileFriendlyZoom: string;\n    /** Deprecated. Please use [mobileFriendlyZoom] instead.\n     * This attributes allows you to increase the size of the UI elements so you can use them on small mobile devices.\n     * This attribute is a string with a percent character at the end (e.g. \"150%\").*/\n    mobileZoom: string;\n    sizeSelector: any;\n    private _top;\n    readonly sidebarPositionTop: string;\n    calcViewerPositionTop(): void;\n    constructor();\n    emitZoomChange(): void;\n    emitZoomChangeAfterDelay(): void;\n    ngOnInit(): void;\n    checkHeight(): void;\n    onPageChange(): void;\n    onSpreadChange(newSpread: 'off' | 'even' | 'odd'): void;\n    private overrideDefaultSettings;\n    private openPDF;\n    private selectCursorTool;\n    ngOnDestroy(): void;\n    private isSecondaryMenuVisible;\n    private isPrimaryMenuVisible;\n    ngOnChanges(changes: SimpleChanges): void;\n    private setZoom;\n    onResize(): void;\n    private doResize;\n}\n"]}