{"version":3,"file":"ngx-phone-mask.js","sources":["ngx-phone-mask/lib/utils.ts","ngx-phone-mask/lib/ngx-phone-mask.directive.ts","ngx-phone-mask/lib/ngx-phone-mask.pipe.ts","ngx-phone-mask/lib/ngx-phone-mask.module.ts"],"names":["getDOM"],"mappings":";;;;;;;;;;;AAAA,MAAa,KAAK,GAAG,CAAC,MAAM,WAC3B,OAAO;IAAM,UACX,QAAQ,EAAE,xBAFb,MAAa,KAAK,GAAG,CAAC,MAAM;MAGzB,OAAO,CAAC,dAFX,IAAC,OAAO,MAAM;SAEU,EAAE,EAAE,CAAC,CAAC,EAC7B,jBAFD,SAAG,QAAQ,EAAE;gBAIb,MAAa,IAAI,GAAG,CAAC,9BAHrB,SAAG,OAAO,CAAC,aAAa,EAAE,EAAE,CAAC,CAAC;AAC9B,CAAC;EAEwC,EAAE,KAAK,CAAC,VADjD;CACyD,WACxD,IAAI,KAAK,CAAC,QAAQ,CAAC,CAAC,MAAM,IAAI,EAAE,IAAI,hDADrC,MAAa,IAAI,GAAG,CAAC,YAAoB,EAAE,KAAK,CAAC,QAAQ;QACX,KAAK,EAAE,EAAE,UACrD,OAAO,CAAC,GAAG,EAAE,OAAO,EAAE,GAAG,EAAE,GAAG,EAAE,3DADlC,IAAC,IAAI,KAAK,CAAC,QAAQ,CAAC,CAAC,MAAM,IAAI,EAAE,IAAI,SAAS,KAAK,EAAE,EAAE;MACd,EAAE,IAAI,EAAE,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,GAAG,EAAE,IAAI,EAAE,IAAI,EAAE,GAAG,EAAE,IAAI,EAAE,IAAI,CAAC,CAAC,MACnH,KAED,OAAO,CAAC,GAAG,EAAE,OAAO,EAAE,GAAG,EAAE,GAAG,3HAH/B,QAAE,OAAO,CAAC,GAAG,EAAE,OAAO,EAAE,GAAG,EAAE,GAAG,EAAE,OAAO,EAAE,IAAI,EAAE,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,GAAG,EAAE,IAAI,EAAE,IAAI,EAAE,GAAG,EAAE,IAAI,EAAE,IAAI,CAAC,CAAC;CAGpF,DAFjC,KAAE;EAEsC,EAAE,IAAI,EAAE,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,GAAG,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,GAAG,EAAE,IAAI,EAAE,IAAI,CAAC,CAAC,EAEzH,tFAHD,IACC,OAAO,CAAC,GAAG,EAAE,OAAO,EAAE,GAAG,EAAE,GAAG,EAAE,OAAO,EAAE,IAAI,EAAE,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,GAAG,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,GAAG,EAAE,IAAI,EAAE,IAAI,CAAC,CAAC;AAC1H,CACC;AACD;AAAC;AAAI;gECdL,MAea,cAAc,IAO1B,xFDRsC;AAAqG;ACd5I,MAea,cAAc;AAC3B,CAMC;AACD;AACG;yBAIH,SAAS,UAAU,5CAHqD;AAC1B;AAEpC;cACH,SAAS,vBADhB,SAAS,UAAU;EACAA,OAAM,EAAE,GAAGA,dADN;AACY,EAAE,CAAC,YAAY,EAAE,GAAG,EAAE,MACzD,OAAO,eAAe,CAAC,IAAI,CAAC,xDADjB,UAAL,SAAS,GAAGA,OAAM,EAAE,GAAGA,OAAM,EAAE,CAAC,YAAY,EAAE,GAAG,EAAE;AACpB,CAAC,WAAW,EAAE,CAAC,CAAC,EACrD,CAiBD,MAAa,qBAAqB,9CAlBlC,IAAC,OAAO,eAAe,CAAC,IAAI,CAAC,SAAS,CAAC,WAAW,EAAE,CAAC,CAAC;AACtD,CAAC;AAiBD,MAAa,qBAAqB;AAAG;AAAQ;AAA4B;MAiBxE,YACS,SAAoB,EACpB,7BAlBK;KAkBkB,EACsB,PAlB7B;eAkBsD,YAFtE,cAAS,GAAT,SAAS,CAAW,tDAhBI,IAejC,YACS,SAAoB,EACpB,WAAuB,EACsB,gBAAyB;GADtE,gBAAW,GAAX,WAAW,CAAY,lCAE9B,QAHO,cAAS,GAAT,SAAS,CAAW;OAEyB,qBAAgB,GAAhB,/BAFxB,QACrB,gBAAW,GAAX,WAAW,CAAY;OACsC,CAAS,SAnBtE,UAAK,GAAG,IAAI,CAAC,SACb,5CAiBwB,QACqB,qBAAgB,GAAhB,gBAAgB,CAAS;cAlBvD,GAAW,EAAE,CAAC,pBAmBvC,QApBU,UAAK,GAAG,IAAI,CAAC;AACvB,QAAU,oBAAe,GAAW,EAAE,CAAC;AACvC;sDAOS,eAAU,GAAG,xEANX;EAMgB,CAAC,HAHZ;AAKf,aAAQ,GAAG,CAAC,CAAM,lBALS,QAGnB,eAAU,GAAG,KAAK,CAAC;CAG1B,CAAC,SACF,cAAS,GAAG,5BAHb,QACC,aAAQ,GAAG,CAAC,CAAM;AACnB,SAAE,CAAC;CAED,CAAC,SAOD,IAAI,IAAI,CAAC,pBARX,QAAC,cAAS,GAAG;GAQc,IAAI,PAP/B,SAAE,CAAC;AAOgC,EAAE,cAClC,IAAI,CAAC,gBAAgB,GAAG,CAAC,zCAP5B,QAME,IAAI,IAAI,CAAC,gBAAgB,IAAI,IAAI,EAAE;MACC,EAAE,CAAC,UACtC,MACD,zBAFF,YAAG,IAAI,CAAC,gBAAgB,GAAG,CAAC,UAAU,EAAE,CAAC;AACzC,SAAG;IAGF,JAFD,KAAE;MAEO,NADT;WAEE,IAAI,CAAC,hBADA;OACU,PAAL;AAAM,IAAI,CAAC,CAAC,SACtB,fADkB,IADnB,QAAQ;EAEH,IAAI,CAAC,oBAAoB,3BAD/B,QAAE,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC;CACY,SAAS,EAAE,cAC5C,IAAI,CAAC,oBAAoB,CAAC,pDAD7B,QAAE,IAAI,IAAI,CAAC,oBAAoB,KAAK,SAAS,EAAE;GACZ,CAAC,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,CAAC,UAC1D,MACD,7CAFF,YAAG,IAAI,CAAC,oBAAoB,CAAC,MAAM,CAAC,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,CAAC;AAC7D,SAAG;AACH,KAAE;AACF;gBACC,hBAAM;CAAK,CAAC,OAAsB,TAAF;EAC/B,IAAI,CAAC,PAAM;SAAI,CAAC,IAAI,CAAC,CAAC,SACtB,zBADmB,IADpB,WAAW,CAAC,OAAsB;EAE7B,IAAI,CAAC,oBAAoB,3BAD/B,QAAE,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC;CACY,SAAS,EAAE,cAC5C,IAAI,CAAC,oBAAoB,CAAC,pDAD7B,QAAE,IAAI,IAAI,CAAC,oBAAoB,KAAK,SAAS,EAAE;GACZ,CAAC,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,CAAC,UAC1D,MACD,7CAFF,YAAG,IAAI,CAAC,oBAAoB,CAAC,MAAM,CAAC,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,CAAC;AAC7D,SAAG;IAIF,JAHD,KAAE;IAGK,JAFP;SAGE,IAAI,CAAC,dAFA;IAES,EAAE,CAAC,PADhB;KAED,LAFS,IAAV,MAAM;AACP,QAAE,IAAI,CAAC,SAAS,EAAE,CAAC;AACnB,KAAE;AACF;cACC,dAAM;AAAI,CAAC,KAAU,YACpB,lBAAG;GAAC,CAAC,JAEL;MAFe,EAAE,CAAC,TAEV,IAHT,UAAU,CAAC,KAAU;AACtB,QAAE,IAAI,CAAC,UAAU,EAAE,CAAC;oEAGZ,pEAFR;aAEuB,GAAG,KAAK,rBAA1B;AAA8B,IAAI,GAAG,EAAE,GAAG,KAAK,UAClD,IAAI,CAAC,SAAS,CAAC,WAAW,CAAC,IAAI,CAAC,3DADJ,cAAtB,eAAe,GAAG,KAAK,IAAI,IAAI,GAAG,EAAE,GAAG,KAAK;WACN,EAAE,OAAO,EAAE,eAAe,CAAC,CAAC,SAExE,IAAI,IAAI,CAAC,oBAAoB,7EAF/B,QAAE,IAAI,CAAC,SAAS,CAAC,WAAW,CAAC,IAAI,CAAC,YAAY,EAAE,OAAO,EAAE,eAAe,CAAC,CAAC;CAEtC,SAAS,EAAE,cAC5C,IAAI,CAAC,oBAAoB,CAAC,pDAF7B,QACE,IAAI,IAAI,CAAC,oBAAoB,KAAK,SAAS,EAAE;GACZ,CAAC,KAAK,CAAC,CAAC,UACxC,MACD,3BAFF,YAAG,IAAI,CAAC,oBAAoB,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;AAC3C,SAAG;AACH,KAAE;AACF;WACC,XAAM;MAAU,CAAC,EAAoB,TAAV;EAC1B,IAAI,CAAC,PADwC;OAChC,GAAG,EAAE,CAAC,MACnB,nBADK,IADN,gBAAgB,CAAC,EAAoB;AAAI,QACxC,IAAI,CAAC,QAAQ,GAAG,EAAE,CAAC;AACrB,KAAE;AACF;WACC,XAAM;OAAW,CAAC,EAAc,VAAL;GAC1B,IAAI,PAAF;AAAG,SAAS,GAAG,EAAE,CAAC,MACpB,rBADU,IADX,iBAAiB,CAAC,EAAc;AAAI,QACnC,IAAI,CAAC,SAAS,GAAG,EAAE,CAAC;AACtB,KAAE;AACF;;AACoC;AAC5B;IADP,gBAAgB,CAAC,UAAmB,/BACrB,IADf,gBAAgB,CAAC,UAAmB;QACnC,IAAI,CAAC,SAAS,CAAC,WAAW,CAAC,IAAI,CAAC,WAAW,CAAC,aAAa,EAAE,UAAU,EAAE,UAAU,CAAC,CAAC,3FAD5C,QACvC,IAAI,CAAC,SAAS,CAAC,WAAW,CAAC,IAAI,CAAC,WAAW,CAAC,aAAa,EAAE,UAAU,EAAE,UAAU,CAAC,CAAC;KACnF,LAAF,KAAE;AACF;AACO;AACC;AAAmB;IAD1B,YAAY,CAAC,KAAK,tBACgB,IADlC,YAAY,CAAC,KAAK;QACjB,IAAI,CAAC,IAAI,CAAC,gBAAgB,KAAK,IAAI,CAAC,gBAAgB,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,EAAE,nFAA7E,QAAE,IAAI,CAAC,IAAI,CAAC,gBAAgB,KAAK,IAAI,CAAC,gBAAgB,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,EAAE;YAC1E,IAAI,CAAC,UAAU,EAAE,CAAC,9BAArB,YAAG,IAAI,CAAC,UAAU,EAAE,CAAC;YAElB,IAAI,IAAI,CAAC,oBAAoB,KAAK,SAAS,EAAE,zDADhD,YACG,IAAI,IAAI,CAAC,oBAAoB,KAAK,SAAS,EAAE;gBAC5C,IAAI,CAAC,oBAAoB,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,xDAA5C,gBAAI,IAAI,CAAC,oBAAoB,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;AAC5C;gBAEI,KAAK,GAAG,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,hDAAzB,gBAAP,KAAK,GAAG,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC;gBAEhC,IAAI,IAAI,CAAC,KAAK,EAAE,hCADpB,gBACI,IAAI,IAAI,CAAC,KAAK,EAAE;oBACf,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,CAAC,hDAAjC,oBAAK,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,CAAC;iBAC5B,jBAAL,iBAAK;qBAAM,rBAAL,qBAAK;oBACN,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC,zCAA1B,oBAAK,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;iBACrB,jBAAL,iBAAK;aACD,bAAJ,aAAI;SACD,TAAH,SAAG;KACD,LAAF,KAAE;AACF;AACO;AACJ;AAAmB;IADrB,UAAU,CAAC,MAAM,GAAG,KAAK,7BAEtB,IAFH,UAAU,CAAC,MAAM,GAAG,KAAK;QACxB,IAAI,CAAC,cAAc,GAAG,9BAAxB,QAAE,IAAI,CAAC,cAAc,GAAG;YACrB,IAAI,EAAE,IAAI,CAAC,IAAI,CAAC,eAAe,CAAC,5CAAnC,YAAG,IAAI,EAAE,IAAI,CAAC,IAAI,CAAC,eAAe,CAAC;YAChC,KAAK,EAAE,KAAK,xBAAf,YAAG,KAAK,EAAE,KAAK;YACZ,eAAe,EAAE,GAAG,hCAAvB,YAAG,eAAe,EAAE,GAAG;YACpB,IAAI,EAAE,SAAS,3BAAlB,YAAG,IAAI,EAAE,SAAS;YACf,iBAAiB,EAAE,KAAK,pCAA3B,YAAG,iBAAiB,EAAE,KAAK;SACxB,CAAC,VAAJ,SAAG,CAAC;QACF,IAAI,CAAC,IAAI,CAAC,YAAY,EAAE,hCAA1B,QAAE,IAAI,CAAC,IAAI,CAAC,YAAY,EAAE;YACvB,IAAI,IAAI,CAAC,WAAW,CAAC,aAAa,CAAC,OAAO,CAAC,WAAW,EAAE,KAAK,OAAO,EAAE,lFAAzE,YAAG,IAAI,IAAI,CAAC,WAAW,CAAC,aAAa,CAAC,OAAO,CAAC,WAAW,EAAE,KAAK,OAAO,EAAE;AACzE;gBACI,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,WAAW,CAAC,aAAa,CAAC,nEAA3C,gBAAR,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,WAAW,CAAC,aAAa,CAAC;aACnD,bAAJ,aAAI;iBAAM,jBAAL,iBAAK;AACV;gBACI,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,WAAW,CAAC,aAAa,CAAC,oBAAoB,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,pGAA5E,gBAAR,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,WAAW,CAAC,aAAa,CAAC,oBAAoB,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC;aACpF,bAAJ,aAAI;SACD,TAAH,SAAG;QAED,IAAI,IAAI,CAAC,YAAY,IAAI,MAAM,EAAE,zCADnC,QACE,IAAI,IAAI,CAAC,YAAY,IAAI,MAAM,EAAE;YAChC,IAAI,CAAC,oBAAoB,GAAG,0BAA0B,CACrD,MAAM,CAAC,MAAM,CAAC,EAAE,YAAY,EAAE,IAAI,CAAC,YAAY,EAAE,EAAE,IAAI,CAAC,cAAc,CAAC,CACvE,CAAC,5IAFL,YAAG,IAAI,CAAC,oBAAoB,GAAG,0BAA0B,CACrD,MAAM,CAAC,MAAM,CAAC,EAAE,YAAY,EAAE,IAAI,CAAC,YAAY,EAAE,EAAE,IAAI,CAAC,cAAc,CAAC,CACvE,CAAC;SACF,TAAH,SAAG;KAED,LADF,KACE;AACF;AACO;AAAmB;IAAzB,iBAAiB,rBACb,IADJ,iBAAiB;QAChB,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,/BADF,QACrB,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC;KACvB,LAAF,KAAE;AACF;AACO;AAAwB;AAClB;IADZ,eAAe,CAAC,KAAU,zBACN,IADpB,eAAe,CAAC,KAAU;QACzB,IAAI,CAAC,UAAU,GAAG,KAAK,CAAC,hCADK,QAC7B,IAAI,CAAC,UAAU,GAAG,KAAK,CAAC;QACxB,IAAI,CAAC,gBAAgB,IAAI,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,CAAC,1DAApD,QAAE,IAAI,CAAC,gBAAgB,IAAI,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,CAAC;KAClD,LAAF,KAAE;AACF;iDA1IC,SAAS,SAAC,kBACV,IAAI,EAAE,sBACL,SAAS,EAAE,mCAAmC,sBAC9C,QAAQ,EAAE,aAAa,sBACvB,oBAAoB,EAAE,vMAJvB,SAAS,SAAC,kBACV,IAAI,EAAE,sBACL,SAAS,EAAE,mCAAmC,sBAC9C,QAAQ,EAAE,aAAa,sBACvB,oBAAoB,EAAE;SAAqB,sBAC3C,kBAAkB,EAAE,sCAAsC,kBAC1D,kBACD,QAAQ,EAAE,gBAAgB,kBAC1B,QAAQ,EAAE,cAAc,xLAJoB,sBAC3C,kBAAkB,EAAE,sCAAsC,kBAC1D,kBACD,QAAQ,EAAE,gBAAgB,kBAC1B,QAAQ,EAAE,cAAc;IACxB,SAAS,EAAE,CAAC,0BACX,OAAO,EAAE,iBAAiB,0BAC1B,WAAW,EAAE,UAAU,CAAC,MAAM,qBAAqB,CAAC,0BACpD,KAAK,EAAE,IAAI,sBACX,CAAC,cACF,sFAxCA,SAAS,gBALT,UAAU,8CAkER,QAAQ,YAAI,MAAM,SAAC,uBAAuB,zbA1B5C,SAAS,EAAE,CAAC,0BACX,OAAO,EAAE,iBAAiB,0BAC1B,WAAW,EAAE,UAAU,CAAC,MAAM,qBAAqB,CAAC,0BACpD,KAAK,EAAE,IAAI,sBACX,CAAC,cACF;IAEC,KAAK,mCACL,KAAK,0BAuCL,YAAY,SAAC,MAAM;;;ACzFrB,MAQa,gBAAgB;iDDwCxB;UCvCJ,VDuCK;ACvCI,CAAC,KAAa,YACtB,IAAI,CAAC,KAAK,EAAE,cACX,5CDqCsB;ICrCf,EAAE,CAAC,UACV,jBDoCqE,YAzCvE,SAAS;CCOR,OAAO,aAAa,CACnB,tBDPD,YAND,UAAU;CCaH,EACL,IAAI,EAAE,EACN,EAAE,KAAK,EAAE,KAAK,EAAE,CAChB,CAAC,cAAc,CAAC,MACjB,+CAfD,IAAI,rGDDH,0CAiEC,QAAQ,YAAI,MAAM,SAAC,uBAAuB;EChEvC,FDgE+C;iBC/DpD,IAAI,EAAE,cAAc,rCD+DmC;UC9DvD,VDgEU,oBArBT,KAAK;AAAK,8BACV,KAAK;AAAK,qBAuCV,YAAY,SAAC,MAAM;AACjB;mCE1FJ,MAgBa,kBAAkB,mDAX9B;CAAQ,SAAC;GACT,OAAO,EAAE,CAAC;UAAc,CAAC;KACzB,YAAY,EAAE,sBACb,qBAAqB;gBACrB,gBAAgB;KAChB,kBACD,OAAO,EAAE,sBACR;UAAqB,sBACrB,gBAAgB,kBAChB;CACD;;;;;;;;;;;;;;;;;;;;;;;;;oBF2EK;AAAC;AAAC;AACR;AAGU;AAGqD;ACjG/D,MAQa,gBAAgB;AAAG;AAAQ;AACjC;AAAmB;AAAQ,IAAjC,SAAS,CAAC,KAAa;AAAI,QAC1B,IAAI,CAAC,KAAK,EAAE;AACd,YAAG,OAAO,EAAE,CAAC;AACb,SAAG;AACH,QACE,OAAO,aAAa,CACnB,KAAK,EACL,IAAI,EAAE,EACN,EAAE,KAAK,EAAE,KAAK,EAAE,CAChB,CAAC,cAAc,CAAC;AACnB,KAAE;AACF;4CAhBC,IAAI,SAAC,kBACL,IAAI,EAAE,cAAc;KACpB;;;;;;0BAEG;AAAC;AAAC;AAAI;AAAkC;AAM3B;ACdjB,MAgBa,kBAAkB;AAC/B;8CAZC,QAAQ,SAAC,kBACT,OAAO,EAAE,CAAC,cAAc,CAAC;cACzB,YAAY,EAAE,sBACb,qBAAqB;YACrB,gBAAgB,kBAChB,kBACD,OAAO,EAAE;WACR,qBAAqB,sBACrB,gBAAgB,kBAChB,cACD;;;;;;;;;;;;;;0BACI;AAAC;AAAC;AAAI;AAEF;AAAqG;AAAI;AAAC;AAAI;AAAkC;AAAqG;AAAI;AAAC","sourcesContent":["export const clean = (number) => {\n\treturn number\n\t\t.toString()\n\t\t.replace(/[^\\d\\^\\+]/gm, '');\n};\n\nexport const mask = (maxLength: number = 13) => (rawValue) => {\n\tif (clean(rawValue).length <= 12 || maxLength === 12) {\n\t\treturn ['+', /[1-9]/, ' ', '(', /[1-9]/, /\\d/, /\\d/, ')', ' ', /\\d/, /\\d/, /\\d/, '-', /\\d/, /\\d/, '-', /\\d/, /\\d/];\n\t}\n\n\treturn ['+', /[1-9]/, ' ', '(', /[1-9]/, /\\d/, /\\d/, ')', ' ', /\\d/, /\\d/, /\\d/, '-', /\\d/, /\\d/, /\\d/, '-', /\\d/, /\\d/];\n\n};\n","import {\n\tDirective,\n\tElementRef,\n\tforwardRef, HostListener,\n\tInject, Input,\n\tOnChanges, OnInit,\n\tOptional,\n\tRenderer2,\n\tSimpleChanges\n} from '@angular/core';\nimport { NG_VALUE_ACCESSOR, ControlValueAccessor, COMPOSITION_BUFFER_MODE } from '@angular/forms';\nimport { ÉµgetDOM as getDOM } from '@angular/platform-browser';\nimport { createTextMaskInputElement } from 'text-mask-core/dist/textMaskCore';\nimport { mask, clean } from './utils';\n\nexport class TextMaskConfig {\n\tmask: Array<string | RegExp> | ((raw: string) => Array<string | RegExp>) | false;\n\tguide?: boolean;\n\tplaceholderChar?: string;\n\tpipe?: (conformedValue: string, config: TextMaskConfig) => false | string | object;\n\tkeepCharPositions?: boolean;\n\tshowMask?: boolean;\n}\n\n/**\n * We must check whether the agent is Android because composition events\n * behave differently between iOS and Android.\n */\nfunction _isAndroid(): boolean {\n\tconst userAgent = getDOM() ? getDOM().getUserAgent() : '';\n\treturn /android (\\d+)/.test(userAgent.toLowerCase());\n}\n\n@Directive({\n\thost: {\n\t\t'(input)': '_handleInput($event.target.value)',\n\t\t'(blur)': 'onTouched()',\n\t\t'(compositionstart)': '_compositionStart()',\n\t\t'(compositionend)': '_compositionEnd($event.target.value)'\n\t},\n\tselector: '[ngxPhoneMask]',\n\texportAs: 'ngxPhoneMask',\n\tproviders: [{\n\t\tprovide: NG_VALUE_ACCESSOR,\n\t\tuseExisting: forwardRef(() => NgxPhoneMaskDirective),\n\t\tmulti: true\n\t}]\n})\nexport class NgxPhoneMaskDirective implements ControlValueAccessor, OnChanges, OnInit {\n\t@Input() clean = true;\n\t@Input() maxNumberLength: number = 13;\n\n\ttextMaskConfig: TextMaskConfig;\n\n\tprivate textMaskInputElement: any;\n\tprivate inputElement: HTMLInputElement;\n\n\t/** Whether the user is creating a composition string (IME events). */\n\tprivate _composing = false;\n\n\tonChange = (_: any) => {\n\t};\n\tonTouched = () => {\n\t};\n\n\tconstructor(\n\t\tprivate _renderer: Renderer2,\n\t\tprivate _elementRef: ElementRef,\n\t\t@Optional() @Inject(COMPOSITION_BUFFER_MODE) private _compositionMode: boolean\n\t) {\n\t\tif (this._compositionMode == null) {\n\t\t\tthis._compositionMode = !_isAndroid();\n\t\t}\n\t}\n\n\tngOnInit() {\n\t\tthis._setupMask(true);\n\t\tif (this.textMaskInputElement !== undefined) {\n\t\t\tthis.textMaskInputElement.update(this.inputElement.value);\n\t\t}\n\t}\n\n\tngOnChanges(changes: SimpleChanges) {\n\t\tthis._setupMask(true);\n\t\tif (this.textMaskInputElement !== undefined) {\n\t\t\tthis.textMaskInputElement.update(this.inputElement.value);\n\t\t}\n\t}\n\n\t@HostListener('blur')\n\tonBlur() {\n\t\tthis.onTouched();\n\t}\n\n\twriteValue(value: any) {\n\t\tthis._setupMask();\n\n\t\t// set the initial value for cases where the mask is disabled\n\t\tconst normalizedValue = value == null ? '' : value;\n\t\tthis._renderer.setProperty(this.inputElement, 'value', normalizedValue);\n\n\t\tif (this.textMaskInputElement !== undefined) {\n\t\t\tthis.textMaskInputElement.update(value);\n\t\t}\n\t}\n\n\tregisterOnChange(fn: (_: any) => void): void {\n\t\tthis.onChange = fn;\n\t}\n\n\tregisterOnTouched(fn: () => void): void {\n\t\tthis.onTouched = fn;\n\t}\n\n\tsetDisabledState(isDisabled: boolean): void {\n\t\tthis._renderer.setProperty(this._elementRef.nativeElement, 'disabled', isDisabled);\n\t}\n\n\t_handleInput(value) {\n\t\tif (!this._compositionMode || (this._compositionMode && !this._composing)) {\n\t\t\tthis._setupMask();\n\n\t\t\tif (this.textMaskInputElement !== undefined) {\n\t\t\t\tthis.textMaskInputElement.update(value);\n\n\t\t\t\t// get the updated value\n\t\t\t\tvalue = this.inputElement.value;\n\n\t\t\t\tif (this.clean) {\n\t\t\t\t\tthis.onChange(clean(value));\n\t\t\t\t} else {\n\t\t\t\t\tthis.onChange(value);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t_setupMask(create = false) {\n\t\tthis.textMaskConfig = {\n\t\t\tmask: mask(this.maxNumberLength),\n\t\t\tguide: false,\n\t\t\tplaceholderChar: '_',\n\t\t\tpipe: undefined,\n\t\t\tkeepCharPositions: false,\n\t\t};\n\t\tif (!this.inputElement) {\n\t\t\tif (this._elementRef.nativeElement.tagName.toUpperCase() === 'INPUT') {\n\t\t\t\t// `textMask` directive is used directly on an input element\n\t\t\t\tthis.inputElement = this._elementRef.nativeElement;\n\t\t\t} else {\n\t\t\t\t// `textMask` directive is used on an abstracted input element, `md-input-container`, etc\n\t\t\t\tthis.inputElement = this._elementRef.nativeElement.getElementsByTagName('INPUT')[0];\n\t\t\t}\n\t\t}\n\n\t\tif (this.inputElement && create) {\n\t\t\tthis.textMaskInputElement = createTextMaskInputElement(\n\t\t\t\tObject.assign({ inputElement: this.inputElement }, this.textMaskConfig)\n\t\t\t);\n\t\t}\n\n\t}\n\n\t_compositionStart(): void {\n\t\tthis._composing = true;\n\t}\n\n\t_compositionEnd(value: any): void {\n\t\tthis._composing = false;\n\t\tthis._compositionMode && this._handleInput(value);\n\t}\n}\n","import { Pipe, PipeTransform } from '@angular/core';\nimport { conformToMask } from 'angular2-text-mask';\nimport { mask } from './utils';\n\n@Pipe({\n\tname: 'ngxPhoneMask'\n})\n\nexport class NgxPhoneMaskPipe implements PipeTransform {\n\ttransform(value: string): string {\n\t\tif (!value) {\n\t\t\treturn '';\n\t\t}\n\n\t\treturn conformToMask(\n\t\t\tvalue,\n\t\t\tmask(),\n\t\t\t{ guide: false }\n\t\t).conformedValue;\n\t}\n}\n","import { NgModule } from '@angular/core';\nimport { NgxPhoneMaskDirective } from './ngx-phone-mask.directive';\nimport { TextMaskModule } from 'angular2-text-mask';\nimport { NgxPhoneMaskPipe } from './ngx-phone-mask.pipe';\n\n@NgModule({\n\timports: [TextMaskModule],\n\tdeclarations: [\n\t\tNgxPhoneMaskDirective,\n\t\tNgxPhoneMaskPipe\n\t],\n\texports: [\n\t\tNgxPhoneMaskDirective,\n\t\tNgxPhoneMaskPipe\n\t]\n})\nexport class NgxPhoneMaskModule {\n}\n"]}