{"version":3,"file":"ngx-phone-mask.js.map","sources":["ng://ngx-phone-mask/lib/utils.ts","ng://ngx-phone-mask/lib/ngx-phone-mask.directive.ts","ng://ngx-phone-mask/lib/ngx-phone-mask.pipe.ts","ng://ngx-phone-mask/lib/ngx-phone-mask.module.ts"],"sourcesContent":["export const clean = (number) => {\n\treturn number\n\t\t.toString()\n\t\t.replace(/[^\\d\\^\\+]/gm, '');\n};\n\nexport const mask = (maxLength: number = 13) => (rawValue) => {\n\tif (clean(rawValue).length <= 12 || maxLength === 12) {\n\t\treturn ['+', /[1-9]/, ' ', '(', /[1-9]/, /\\d/, /\\d/, ')', ' ', /\\d/, /\\d/, /\\d/, '-', /\\d/, /\\d/, '-', /\\d/, /\\d/];\n\t}\n\n\treturn ['+', /[1-9]/, ' ', '(', /[1-9]/, /\\d/, /\\d/, ')', ' ', /\\d/, /\\d/, /\\d/, '-', /\\d/, /\\d/, /\\d/, '-', /\\d/, /\\d/];\n\n};\n","import {\n\tDirective,\n\tElementRef,\n\tforwardRef, HostListener,\n\tInject, Input,\n\tOnChanges, OnInit,\n\tOptional,\n\tRenderer2,\n\tSimpleChanges\n} from '@angular/core';\nimport { NG_VALUE_ACCESSOR, ControlValueAccessor, COMPOSITION_BUFFER_MODE } from '@angular/forms';\nimport { ÉµgetDOM as getDOM } from '@angular/platform-browser';\nimport { createTextMaskInputElement } from 'text-mask-core/dist/textMaskCore';\nimport { mask, clean } from './utils';\n\nexport class TextMaskConfig {\n\tmask: Array<string | RegExp> | ((raw: string) => Array<string | RegExp>) | false;\n\tguide?: boolean;\n\tplaceholderChar?: string;\n\tpipe?: (conformedValue: string, config: TextMaskConfig) => false | string | object;\n\tkeepCharPositions?: boolean;\n\tshowMask?: boolean;\n}\n\n/**\n * We must check whether the agent is Android because composition events\n * behave differently between iOS and Android.\n */\nfunction _isAndroid(): boolean {\n\tconst userAgent = getDOM() ? getDOM().getUserAgent() : '';\n\treturn /android (\\d+)/.test(userAgent.toLowerCase());\n}\n\n@Directive({\n\thost: {\n\t\t'(input)': '_handleInput($event.target.value)',\n\t\t'(blur)': 'onTouched()',\n\t\t'(compositionstart)': '_compositionStart()',\n\t\t'(compositionend)': '_compositionEnd($event.target.value)'\n\t},\n\tselector: '[ngxPhoneMask]',\n\texportAs: 'ngxPhoneMask',\n\tproviders: [{\n\t\tprovide: NG_VALUE_ACCESSOR,\n\t\tuseExisting: forwardRef(() => NgxPhoneMaskDirective),\n\t\tmulti: true\n\t}]\n})\nexport class NgxPhoneMaskDirective implements ControlValueAccessor, OnChanges, OnInit {\n\t@Input() clean = true;\n\t@Input() maxNumberLength: number = 13;\n\n\ttextMaskConfig: TextMaskConfig;\n\n\tprivate textMaskInputElement: any;\n\tprivate inputElement: HTMLInputElement;\n\n\t/** Whether the user is creating a composition string (IME events). */\n\tprivate _composing = false;\n\n\tonChange = (_: any) => {\n\t};\n\tonTouched = () => {\n\t};\n\n\tconstructor(\n\t\tprivate _renderer: Renderer2,\n\t\tprivate _elementRef: ElementRef,\n\t\t@Optional() @Inject(COMPOSITION_BUFFER_MODE) private _compositionMode: boolean\n\t) {\n\t\tif (this._compositionMode == null) {\n\t\t\tthis._compositionMode = !_isAndroid();\n\t\t}\n\t}\n\n\tngOnInit() {\n\t\tthis._setupMask(true);\n\t\tif (this.textMaskInputElement !== undefined) {\n\t\t\tthis.textMaskInputElement.update(this.inputElement.value);\n\t\t}\n\t}\n\n\tngOnChanges(changes: SimpleChanges) {\n\t\tthis._setupMask(true);\n\t\tif (this.textMaskInputElement !== undefined) {\n\t\t\tthis.textMaskInputElement.update(this.inputElement.value);\n\t\t}\n\t}\n\n\t@HostListener('blur')\n\tonBlur() {\n\t\tthis.onTouched();\n\t}\n\n\twriteValue(value: any) {\n\t\tthis._setupMask();\n\n\t\t// set the initial value for cases where the mask is disabled\n\t\tconst normalizedValue = value == null ? '' : value;\n\t\tthis._renderer.setProperty(this.inputElement, 'value', normalizedValue);\n\n\t\tif (this.textMaskInputElement !== undefined) {\n\t\t\tthis.textMaskInputElement.update(value);\n\t\t}\n\t}\n\n\tregisterOnChange(fn: (_: any) => void): void {\n\t\tthis.onChange = fn;\n\t}\n\n\tregisterOnTouched(fn: () => void): void {\n\t\tthis.onTouched = fn;\n\t}\n\n\tsetDisabledState(isDisabled: boolean): void {\n\t\tthis._renderer.setProperty(this._elementRef.nativeElement, 'disabled', isDisabled);\n\t}\n\n\t_handleInput(value) {\n\t\tif (!this._compositionMode || (this._compositionMode && !this._composing)) {\n\t\t\tthis._setupMask();\n\n\t\t\tif (this.textMaskInputElement !== undefined) {\n\t\t\t\tthis.textMaskInputElement.update(value);\n\n\t\t\t\t// get the updated value\n\t\t\t\tvalue = this.inputElement.value;\n\n\t\t\t\tif (this.clean) {\n\t\t\t\t\tthis.onChange(clean(value));\n\t\t\t\t} else {\n\t\t\t\t\tthis.onChange(value);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t_setupMask(create = false) {\n\t\tthis.textMaskConfig = {\n\t\t\tmask: mask(this.maxNumberLength),\n\t\t\tguide: false,\n\t\t\tplaceholderChar: '_',\n\t\t\tpipe: undefined,\n\t\t\tkeepCharPositions: false,\n\t\t};\n\t\tif (!this.inputElement) {\n\t\t\tif (this._elementRef.nativeElement.tagName.toUpperCase() === 'INPUT') {\n\t\t\t\t// `textMask` directive is used directly on an input element\n\t\t\t\tthis.inputElement = this._elementRef.nativeElement;\n\t\t\t} else {\n\t\t\t\t// `textMask` directive is used on an abstracted input element, `md-input-container`, etc\n\t\t\t\tthis.inputElement = this._elementRef.nativeElement.getElementsByTagName('INPUT')[0];\n\t\t\t}\n\t\t}\n\n\t\tif (this.inputElement && create) {\n\t\t\tthis.textMaskInputElement = createTextMaskInputElement(\n\t\t\t\tObject.assign({ inputElement: this.inputElement }, this.textMaskConfig)\n\t\t\t);\n\t\t}\n\n\t}\n\n\t_compositionStart(): void {\n\t\tthis._composing = true;\n\t}\n\n\t_compositionEnd(value: any): void {\n\t\tthis._composing = false;\n\t\tthis._compositionMode && this._handleInput(value);\n\t}\n}\n","import { Pipe, PipeTransform } from '@angular/core';\nimport { conformToMask } from 'angular2-text-mask';\nimport { mask } from './utils';\n\n@Pipe({\n\tname: 'ngxPhoneMask'\n})\n\nexport class NgxPhoneMaskPipe implements PipeTransform {\n\ttransform(value: string): string {\n\t\tif (!value) {\n\t\t\treturn '';\n\t\t}\n\n\t\treturn conformToMask(\n\t\t\tvalue,\n\t\t\tmask(),\n\t\t\t{ guide: false }\n\t\t).conformedValue;\n\t}\n}\n","import { NgModule } from '@angular/core';\nimport { NgxPhoneMaskDirective } from './ngx-phone-mask.directive';\nimport { TextMaskModule } from 'angular2-text-mask';\nimport { NgxPhoneMaskPipe } from './ngx-phone-mask.pipe';\n\n@NgModule({\n\timports: [TextMaskModule],\n\tdeclarations: [\n\t\tNgxPhoneMaskDirective,\n\t\tNgxPhoneMaskPipe\n\t],\n\texports: [\n\t\tNgxPhoneMaskDirective,\n\t\tNgxPhoneMaskPipe\n\t]\n})\nexport class NgxPhoneMaskModule {\n}\n"],"names":["getDOM"],"mappings":"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"}
